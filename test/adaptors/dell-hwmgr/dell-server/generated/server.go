// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"context"
	"fmt"
	"net/http"
	"time"

	"github.com/gorilla/mux"
	"github.com/oapi-codegen/runtime"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for CloudCloudType.
const (
	CLOUDTYPEDEF CloudCloudType = "CLOUDTYPE_DEF"
	KUBERNETES   CloudCloudType = "KUBERNETES"
	RHOCP        CloudCloudType = "RHOCP"
)

// Defines values for ComputeKind.
const (
	KINDDEF  ComputeKind = "KIND_DEF"
	LOGICAL  ComputeKind = "LOGICAL"
	PHYSICAL ComputeKind = "PHYSICAL"
)

// Defines values for ComputeRealTime.
const (
	ComputeRealTimeFALSE ComputeRealTime = "FALSE"
	ComputeRealTimeRTDEF ComputeRealTime = "RT_DEF"
	ComputeRealTimeTRUE  ComputeRealTime = "TRUE"
)

// Defines values for FilterOperator.
const (
	AnyOf       FilterOperator = "any_of"
	Contains    FilterOperator = "contains"
	EndsWith    FilterOperator = "ends_with"
	IsNotEmpty  FilterOperator = "is_not_empty"
	IsNotNull   FilterOperator = "is_not_null"
	IsNull      FilterOperator = "is_null"
	None        FilterOperator = "none"
	NotAnyOf    FilterOperator = "not_any_of"
	NotContains FilterOperator = "not_contains"
	StartsWith  FilterOperator = "starts_with"
)

// Defines values for ResourceAdminState.
const (
	LOCKED            ResourceAdminState = "LOCKED"
	SHUTTINGDOWN      ResourceAdminState = "SHUTTING_DOWN"
	UNKNOWNADMINSTATE ResourceAdminState = "UNKNOWN_ADMINSTATE"
	UNLOCKED          ResourceAdminState = "UNLOCKED"
)

// Defines values for ResourceAdminStatus.
const (
	ALARMOUTSTANDING   ResourceAdminStatus = "ALARM_OUTSTANDING"
	CLEAR              ResourceAdminStatus = "CLEAR"
	CRITICAL           ResourceAdminStatus = "CRITICAL"
	MAJOR              ResourceAdminStatus = "MAJOR"
	MINOR              ResourceAdminStatus = "MINOR"
	UNDERREPAIR        ResourceAdminStatus = "UNDER_REPAIR"
	UNKNOWNADMINSTATUS ResourceAdminStatus = "UNKNOWN_ADMINSTATUS"
)

// Defines values for ResourceAvStatus.
const (
	ResourceAvStatusDEGRADED        ResourceAvStatus = "DEGRADED"
	ResourceAvStatusDEPENDANCY      ResourceAvStatus = "DEPENDANCY"
	ResourceAvStatusFAILED          ResourceAvStatus = "FAILED"
	ResourceAvStatusINTEST          ResourceAvStatus = "IN_TEST"
	ResourceAvStatusLOGFULL         ResourceAvStatus = "LOG_FULL"
	ResourceAvStatusNOTINSTALLED    ResourceAvStatus = "NOT_INSTALLED"
	ResourceAvStatusOFFDUTY         ResourceAvStatus = "OFF_DUTY"
	ResourceAvStatusOFFLINE         ResourceAvStatus = "OFFLINE"
	ResourceAvStatusPOWEROFF        ResourceAvStatus = "POWER_OFF"
	ResourceAvStatusUNKNOWNAVSTATUS ResourceAvStatus = "UNKNOWN_AVSTATUS"
)

// Defines values for ResourceCStatus.
const (
	OPEN                ResourceCStatus = "OPEN"
	PARTOFSERVICELOCKED ResourceCStatus = "PART_OF_SERVICE_LOCKED"
	RESERVEDFORTEST     ResourceCStatus = "RESERVED_FOR_TEST"
	SUBJECTTOTEST       ResourceCStatus = "SUBJECT_TO_TEST"
	SUSPENDED           ResourceCStatus = "SUSPENDED"
	UNKNOWNCSTATUS      ResourceCStatus = "UNKNOWN_CSTATUS"
)

// Defines values for ResourceOpState.
const (
	DISABLED       ResourceOpState = "DISABLED"
	ENABLED        ResourceOpState = "ENABLED"
	UNKNOWNOPSTATE ResourceOpState = "UNKNOWN_OPSTATE"
)

// Defines values for ResourcePStatus.
const (
	INITIALIZATIONREQUIRED ResourcePStatus = "INITIALIZATION_REQUIRED"
	INITIALIZING           ResourcePStatus = "INITIALIZING"
	NOTINITIALIZED         ResourcePStatus = "NOT_INITIALIZED"
	REPORTING              ResourcePStatus = "REPORTING"
	TERMINATING            ResourcePStatus = "TERMINATING"
	UNKNOWNPSTATUS         ResourcePStatus = "UNKNOWN_PSTATUS"
)

// Defines values for ResourcePublic.
const (
	ResourcePublicFALSE      ResourcePublic = "FALSE"
	ResourcePublicTRUE       ResourcePublic = "TRUE"
	ResourcePublicUNKNOWNPUB ResourcePublic = "UNKNOWN_PUB"
)

// Defines values for ResourceSStatus.
const (
	ResourceSStatusCOLDSTANDBY      ResourceSStatus = "COLD_STANDBY"
	ResourceSStatusHOTSTANDBY       ResourceSStatus = "HOT_STANDBY"
	ResourceSStatusNONE             ResourceSStatus = "NONE"
	ResourceSStatusPROVIDINGSERVICE ResourceSStatus = "PROVIDING_SERVICE"
	ResourceSStatusUNKNOWNSSTATUS   ResourceSStatus = "UNKNOWN_SSTATUS"
)

// Defines values for ResourceUStatus.
const (
	ResourceUStatusKNOWN          ResourceUStatus = "KNOWN"
	ResourceUStatusUNKNOWN        ResourceUStatus = "UNKNOWN"
	ResourceUStatusUNKNOWNUSTATUS ResourceUStatus = "UNKNOWN_USTATUS"
)

// Defines values for ResourceUsageState.
const (
	ResourceUsageStateACTIVE            ResourceUsageState = "ACTIVE"
	ResourceUsageStateBUSY              ResourceUsageState = "BUSY"
	ResourceUsageStateIDLE              ResourceUsageState = "IDLE"
	ResourceUsageStateUNKNOWNUSAGESTATE ResourceUsageState = "UNKNOWN_USAGESTATE"
)

// Defines values for ApiprotoComputeRole.
const (
	ApiprotoComputeRolePRIMARY ApiprotoComputeRole = "PRIMARY"
	ApiprotoComputeRoleREPLICA ApiprotoComputeRole = "REPLICA"
	ApiprotoComputeRoleROLEDEF ApiprotoComputeRole = "ROLE_DEF"
	ApiprotoComputeRoleUNKNOWN ApiprotoComputeRole = "UNKNOWN"
	ApiprotoComputeRoleWORKER  ApiprotoComputeRole = "WORKER"
)

// Defines values for ApiprotoComputeSelectorRole.
const (
	CONTROLLER ApiprotoComputeSelectorRole = "CONTROLLER"
	DUPLEX     ApiprotoComputeSelectorRole = "DUPLEX"
	ROLEDEF    ApiprotoComputeSelectorRole = "ROLE_DEF"
	WORKER     ApiprotoComputeSelectorRole = "WORKER"
)

// Defines values for ApiprotoResourceResourceType.
const (
	BMC            ApiprotoResourceResourceType = "BMC"
	CLOUD          ApiprotoResourceResourceType = "CLOUD"
	COMPUTE        ApiprotoResourceResourceType = "COMPUTE"
	NETWORKDEVICE  ApiprotoResourceResourceType = "NETWORKDEVICE"
	UNKNOWNRESTYPE ApiprotoResourceResourceType = "UNKNOWN_RESTYPE"
)

// Defines values for ApiprotoResponseStatus.
const (
	ApiprotoResponseStatusBUSY      ApiprotoResponseStatus = "BUSY"
	ApiprotoResponseStatusCANCELLED ApiprotoResponseStatus = "CANCELLED"
	ApiprotoResponseStatusCOMPLETE  ApiprotoResponseStatus = "COMPLETE"
	ApiprotoResponseStatusFAILED    ApiprotoResponseStatus = "FAILED"
)

// Defines values for ApiprotoStatus.
const (
	ApiprotoStatusBUSY      ApiprotoStatus = "BUSY"
	ApiprotoStatusCANCELLED ApiprotoStatus = "CANCELLED"
	ApiprotoStatusCOMPLETE  ApiprotoStatus = "COMPLETE"
	ApiprotoStatusFAILED    ApiprotoStatus = "FAILED"
)

// Defines values for GetServersInventoryParamsAllocated.
const (
	GetServersInventoryParamsAllocatedFALSE GetServersInventoryParamsAllocated = "FALSE"
	GetServersInventoryParamsAllocatedNONE  GetServersInventoryParamsAllocated = "NONE"
	GetServersInventoryParamsAllocatedTRUE  GetServersInventoryParamsAllocated = "TRUE"
)

// CloudCloudType defines model for CloudCloudType.
type CloudCloudType string

// ComputeKind defines model for ComputeKind.
type ComputeKind string

// ComputeRealTime defines model for ComputeRealTime.
type ComputeRealTime string

// FilterOperator defines model for FilterOperator.
type FilterOperator string

// ResourceAdminState defines model for ResourceAdminState.
type ResourceAdminState string

// ResourceAdminStatus defines model for ResourceAdminStatus.
type ResourceAdminStatus string

// ResourceAvStatus defines model for ResourceAvStatus.
type ResourceAvStatus string

// ResourceCStatus defines model for ResourceCStatus.
type ResourceCStatus string

// ResourceOpState defines model for ResourceOpState.
type ResourceOpState string

// ResourcePStatus defines model for ResourcePStatus.
type ResourcePStatus string

// ResourcePublic defines model for ResourcePublic.
type ResourcePublic string

// ResourceSStatus defines model for ResourceSStatus.
type ResourceSStatus string

// ResourceUStatus defines model for ResourceUStatus.
type ResourceUStatus string

// ResourceUsageState defines model for ResourceUsageState.
type ResourceUsageState string

// ApiprotoAPIError defines model for apiprotoAPIError.
type ApiprotoAPIError struct {
	Code    *int32         `json:"code,omitempty"`
	Details *[]ProtobufAny `json:"details,omitempty"`
	Message *string        `json:"message,omitempty"`
}

// ApiprotoAddress defines model for apiprotoAddress.
type ApiprotoAddress struct {
	City    *string `json:"city,omitempty"`
	Country *string `json:"country,omitempty"`
	State   *string `json:"state,omitempty"`
	Street  *string `json:"street,omitempty"`
}

// ApiprotoAuditSpec defines model for apiprotoAuditSpec.
type ApiprotoAuditSpec struct {
	Action    *string              `json:"Action,omitempty"`
	Blueprint *string              `json:"Blueprint,omitempty"`
	Scan      *string              `json:"Scan,omitempty"`
	Status    *ApiprotoAuditStatus `json:"Status,omitempty"`
}

// ApiprotoAuditStatus defines model for apiprotoAuditStatus.
type ApiprotoAuditStatus struct {
	Compliant *bool              `json:"Compliant,omitempty"`
	Drift     *ApiprotoDriftData `json:"Drift,omitempty"`
	LastScan  *string            `json:"LastScan,omitempty"`
	State     *string            `json:"State,omitempty"`
}

// ApiprotoBIOSAttributes defines model for apiprotoBIOSAttributes.
type ApiprotoBIOSAttributes struct {
	AcPwrRcvry                   *string `json:"AcPwrRcvry,omitempty"`
	AcPwrRcvryDelay              *string `json:"AcPwrRcvryDelay,omitempty"`
	AcPwrRcvryUserDelay          *int32  `json:"AcPwrRcvryUserDelay,omitempty"`
	AutoDiscovery                *string `json:"AutoDiscovery,omitempty"`
	AvxIccpPreGrantLevel         *string `json:"AvxIccpPreGrantLevel,omitempty"`
	AvxIccpPreGrantLicense       *string `json:"AvxIccpPreGrantLicense,omitempty"`
	BootMode                     *string `json:"BootMode,omitempty"`
	BootSeqRetry                 *string `json:"BootSeqRetry,omitempty"`
	CECriticalSEL                *string `json:"CECriticalSEL,omitempty"`
	ConTermType                  *string `json:"ConTermType,omitempty"`
	ControlledTurbo              *string `json:"ControlledTurbo,omitempty"`
	CorrEccSmi                   *string `json:"CorrEccSmi,omitempty"`
	CpuInterconnectBusLinkPower  *string `json:"CpuInterconnectBusLinkPower,omitempty"`
	CpuInterconnectBusSpeed      *string `json:"CpuInterconnectBusSpeed,omitempty"`
	DcuIpPrefetcher              *string `json:"DcuIpPrefetcher,omitempty"`
	DcuStreamerPrefetcher        *string `json:"DcuStreamerPrefetcher,omitempty"`
	DeadLineLlcAlloc             *string `json:"DeadLineLlcAlloc,omitempty"`
	DirectoryAtoS                *string `json:"DirectoryAtoS,omitempty"`
	DirectoryMode                *string `json:"DirectoryMode,omitempty"`
	DramRefreshDelay             *string `json:"DramRefreshDelay,omitempty"`
	DynamicCoreAllocation        *string `json:"DynamicCoreAllocation,omitempty"`
	DynamicL1                    *string `json:"DynamicL1,omitempty"`
	EmbNic1Nic2Nic3Nic4          *string `json:"EmbNic1Nic2Nic3Nic4,omitempty"`
	EmbSata                      *string `json:"EmbSata,omitempty"`
	EmbVideo                     *string `json:"EmbVideo,omitempty"`
	EnablePkgcCriteria           *string `json:"EnablePkgcCriteria,omitempty"`
	EnergyPerformanceBias        *string `json:"EnergyPerformanceBias,omitempty"`
	ErrPrompt                    *string `json:"ErrPrompt,omitempty"`
	ExtSerialConnector           *string `json:"ExtSerialConnector,omitempty"`
	FailSafeBaud                 *string `json:"FailSafeBaud,omitempty"`
	ForceInt10                   *string `json:"ForceInt10,omitempty"`
	HddFailover                  *string `json:"HddFailover,omitempty"`
	InBandManageabilityInterface *string `json:"InBandManageabilityInterface,omitempty"`
	InternalUsb                  *string `json:"InternalUsb,omitempty"`
	IoatEngine                   *string `json:"IoatEngine,omitempty"`
	LlcPrefetch                  *string `json:"LlcPrefetch,omitempty"`
	LogicalProc                  *string `json:"LogicalProc,omitempty"`
	MadtCoreEnumeration          *string `json:"MadtCoreEnumeration,omitempty"`
	MemFrequency                 *string `json:"MemFrequency,omitempty"`
	MemOpMode                    *string `json:"MemOpMode,omitempty"`
	MemPatrolScrub               *string `json:"MemPatrolScrub,omitempty"`
	MemRefreshRate               *string `json:"MemRefreshRate,omitempty"`
	MemTest                      *string `json:"MemTest,omitempty"`
	MemoryEncryption             *string `json:"MemoryEncryption,omitempty"`
	MemoryMappedIOH              *string `json:"MemoryMappedIOH,omitempty"`
	MemoryTraining               *string `json:"MemoryTraining,omitempty"`
	MmioAbove4Gb                 *string `json:"MmioAbove4Gb,omitempty"`
	MonitorMwait                 *string `json:"MonitorMwait,omitempty"`
	NodeInterleave               *string `json:"NodeInterleave,omitempty"`
	NumLock                      *string `json:"NumLock,omitempty"`
	OneTimeBootMode              *string `json:"OneTimeBootMode,omitempty"`
	OppSrefEn                    *string `json:"OppSrefEn,omitempty"`
	OptimizerMode                *string `json:"OptimizerMode,omitempty"`
	OsAcpiCx                     *string `json:"OsAcpiCx,omitempty"`
	OsWatchdogTimer              *string `json:"OsWatchdogTimer,omitempty"`
	PCIRootDeviceUnhide          *string `json:"PCIRootDeviceUnhide,omitempty"`
	PackageCStates               *string `json:"PackageCStates,omitempty"`
	PasswordStatus               *string `json:"PasswordStatus,omitempty"`
	PcieAspmL1                   *string `json:"PcieAspmL1,omitempty"`
	PkgCLatNeg                   *string `json:"PkgCLatNeg,omitempty"`
	PowerCycleRequest            *string `json:"PowerCycleRequest,omitempty"`
	Proc1NumCores                *int32  `json:"Proc1NumCores,omitempty"`
	Proc1TurboCoreNum            *string `json:"Proc1TurboCoreNum,omitempty"`
	Proc2NumCores                *int32  `json:"Proc2NumCores,omitempty"`
	Proc2TurboCoreNum            *string `json:"Proc2TurboCoreNum,omitempty"`
	ProcAdjCacheLine             *string `json:"ProcAdjCacheLine,omitempty"`
	ProcAvxP1                    *string `json:"ProcAvxP1,omitempty"`
	ProcC1E                      *string `json:"ProcC1E,omitempty"`
	ProcCStates                  *string `json:"ProcCStates,omitempty"`
	ProcCores                    *string `json:"ProcCores,omitempty"`
	ProcHwPrefetcher             *string `json:"ProcHwPrefetcher,omitempty"`
	ProcPwrPerf                  *string `json:"ProcPwrPerf,omitempty"`
	ProcSwPrefetcher             *string `json:"ProcSwPrefetcher,omitempty"`
	ProcTurboMode                *string `json:"ProcTurboMode,omitempty"`
	ProcVirtualization           *string `json:"ProcVirtualization,omitempty"`
	ProcX2Apic                   *string `json:"ProcX2Apic,omitempty"`
	ProcessorC1AutoDemotion      *string `json:"ProcessorC1AutoDemotion,omitempty"`
	ProcessorC1AutoUnDemotion    *string `json:"ProcessorC1AutoUnDemotion,omitempty"`
	ProcessorGpssTimer           *string `json:"ProcessorGpssTimer,omitempty"`
	ProcessorRaplPrioritization  *string `json:"ProcessorRaplPrioritization,omitempty"`
	PwrButton                    *string `json:"PwrButton,omitempty"`
	PxeDev1EnDis                 *string `json:"PxeDev1EnDis,omitempty"`
	PxeDev1Interface             *string `json:"PxeDev1Interface,omitempty"`
	PxeDev2EnDis                 *string `json:"PxeDev2EnDis,omitempty"`
	PxeDev2Interface             *string `json:"PxeDev2Interface,omitempty"`
	PxeDev3EnDis                 *string `json:"PxeDev3EnDis,omitempty"`
	PxeDev3Interface             *string `json:"PxeDev3Interface,omitempty"`
	PxeDev4EnDis                 *string `json:"PxeDev4EnDis,omitempty"`
	PxeDev4Interface             *string `json:"PxeDev4Interface,omitempty"`
	RedirAfterBoot               *string `json:"RedirAfterBoot,omitempty"`
	RedundantOsLocation          *string `json:"RedundantOsLocation,omitempty"`
	SHA256SetupPassword          *string `json:"SHA256SetupPassword,omitempty"`
	SHA256SetupPasswordSalt      *string `json:"SHA256SetupPasswordSalt,omitempty"`
	SHA256SystemPassword         *string `json:"SHA256SystemPassword,omitempty"`
	SHA256SystemPasswordSalt     *string `json:"SHA256SystemPasswordSalt,omitempty"`
	SecurityFreezeLock           *string `json:"SecurityFreezeLock,omitempty"`
	SerialComm                   *string `json:"SerialComm,omitempty"`
	SerialPortAddress            *string `json:"SerialPortAddress,omitempty"`
	SetBootOrderDis              *string `json:"SetBootOrderDis,omitempty"`
	SetBootOrderEn               *string `json:"SetBootOrderEn,omitempty"`
	SetBootOrderFqdd1            *string `json:"SetBootOrderFqdd1,omitempty"`
	SetBootOrderFqdd2            *string `json:"SetBootOrderFqdd2,omitempty"`
	SetBootOrderFqdd3            *string `json:"SetBootOrderFqdd3,omitempty"`
	SetBootOrderFqdd4            *string `json:"SetBootOrderFqdd4,omitempty"`
	SetLegacyHddOrderFqdd1       *string `json:"SetLegacyHddOrderFqdd1,omitempty"`
	SetLegacyHddOrderFqdd2       *string `json:"SetLegacyHddOrderFqdd2,omitempty"`
	Slot1                        *string `json:"Slot1,omitempty"`
	Slot2                        *string `json:"Slot2,omitempty"`
	Slot3                        *string `json:"Slot3,omitempty"`
	SnoopHldOff                  *string `json:"SnoopHldOff,omitempty"`
	SriovGlobalEnable            *string `json:"SriovGlobalEnable,omitempty"`
	SubNumaCluster               *string `json:"SubNumaCluster,omitempty"`
	SysMemSize                   *string `json:"SysMemSize,omitempty"`
	SysMemSpeed                  *string `json:"SysMemSpeed,omitempty"`
	SysMemType                   *string `json:"SysMemType,omitempty"`
	SysMfrContactInfo            *string `json:"SysMfrContactInfo,omitempty"`
	SysProfile                   *string `json:"SysProfile,omitempty"`
	SystemBiosVersion            *string `json:"SystemBiosVersion,omitempty"`
	SystemCpldVersion            *string `json:"SystemCpldVersion,omitempty"`
	SystemManufacturer           *string `json:"SystemManufacturer,omitempty"`
	SystemMeVersion              *string `json:"SystemMeVersion,omitempty"`
	SystemModelName              *string `json:"SystemModelName,omitempty"`
	SystemServiceTag             *string `json:"SystemServiceTag,omitempty"`
	TpmSecurity                  *string `json:"TpmSecurity,omitempty"`
	UefiComplianceVersion        *string `json:"UefiComplianceVersion,omitempty"`
	UefiVariableAccess           *string `json:"UefiVariableAccess,omitempty"`
	UncoreFrequency              *string `json:"UncoreFrequency,omitempty"`
	UpiPrefetch                  *string `json:"UpiPrefetch,omitempty"`
	UsbManagedPort               *string `json:"UsbManagedPort,omitempty"`
	UsbPorts                     *string `json:"UsbPorts,omitempty"`
	WorkloadConfiguration        *string `json:"WorkloadConfiguration,omitempty"`
	WorkloadProfile              *string `json:"WorkloadProfile,omitempty"`
	WriteCache                   *string `json:"WriteCache,omitempty"`
	WriteDataCrc                 *string `json:"WriteDataCrc,omitempty"`
	WyseP25BIOSAccess            *string `json:"WyseP25BIOSAccess,omitempty"`
	XptPrefetch                  *string `json:"XptPrefetch,omitempty"`
}

// ApiprotoBIOSSettingsAttributes defines model for apiprotoBIOSSettingsAttributes.
type ApiprotoBIOSSettingsAttributes struct {
	AcPwrRcvry                   *string `json:"AcPwrRcvry,omitempty"`
	AcPwrRcvryDelay              *string `json:"AcPwrRcvryDelay,omitempty"`
	AcPwrRcvryUserDelay          *int32  `json:"AcPwrRcvryUserDelay,omitempty"`
	AutoDiscovery                *string `json:"AutoDiscovery,omitempty"`
	AvxIccpPreGrantLevel         *string `json:"AvxIccpPreGrantLevel,omitempty"`
	AvxIccpPreGrantLicense       *string `json:"AvxIccpPreGrantLicense,omitempty"`
	BootMode                     *string `json:"BootMode,omitempty"`
	BootSeqRetry                 *string `json:"BootSeqRetry,omitempty"`
	CECriticalSEL                *string `json:"CECriticalSEL,omitempty"`
	ConTermType                  *string `json:"ConTermType,omitempty"`
	ControlledTurbo              *string `json:"ControlledTurbo,omitempty"`
	CorrEccSmi                   *string `json:"CorrEccSmi,omitempty"`
	CpuInterconnectBusLinkPower  *string `json:"CpuInterconnectBusLinkPower,omitempty"`
	CpuInterconnectBusSpeed      *string `json:"CpuInterconnectBusSpeed,omitempty"`
	DcuIpPrefetcher              *string `json:"DcuIpPrefetcher,omitempty"`
	DcuStreamerPrefetcher        *string `json:"DcuStreamerPrefetcher,omitempty"`
	DeadLineLlcAlloc             *string `json:"DeadLineLlcAlloc,omitempty"`
	DirectoryAtoS                *string `json:"DirectoryAtoS,omitempty"`
	DirectoryMode                *string `json:"DirectoryMode,omitempty"`
	DramRefreshDelay             *string `json:"DramRefreshDelay,omitempty"`
	DynamicCoreAllocation        *string `json:"DynamicCoreAllocation,omitempty"`
	DynamicL1                    *string `json:"DynamicL1,omitempty"`
	EmbSata                      *string `json:"EmbSata,omitempty"`
	EmbVideo                     *string `json:"EmbVideo,omitempty"`
	EnergyPerformanceBias        *string `json:"EnergyPerformanceBias,omitempty"`
	ErrPrompt                    *string `json:"ErrPrompt,omitempty"`
	ExtSerialConnector           *string `json:"ExtSerialConnector,omitempty"`
	FailSafeBaud                 *string `json:"FailSafeBaud,omitempty"`
	ForceInt10                   *string `json:"ForceInt10,omitempty"`
	HddFailover                  *string `json:"HddFailover,omitempty"`
	InBandManageabilityInterface *string `json:"InBandManageabilityInterface,omitempty"`
	InternalUsb                  *string `json:"InternalUsb,omitempty"`
	IoatEngine                   *string `json:"IoatEngine,omitempty"`
	LlcPrefetch                  *string `json:"LlcPrefetch,omitempty"`
	LogicalProc                  *string `json:"LogicalProc,omitempty"`
	MadtCoreEnumeration          *string `json:"MadtCoreEnumeration,omitempty"`
	MemFrequency                 *string `json:"MemFrequency,omitempty"`
	MemOpMode                    *string `json:"MemOpMode,omitempty"`
	MemPatrolScrub               *string `json:"MemPatrolScrub,omitempty"`
	MemRefreshRate               *string `json:"MemRefreshRate,omitempty"`
	MemTest                      *string `json:"MemTest,omitempty"`
	MemoryEncryption             *string `json:"MemoryEncryption,omitempty"`
	MemoryMappedIOH              *string `json:"MemoryMappedIOH,omitempty"`
	MemoryTraining               *string `json:"MemoryTraining,omitempty"`
	MmioAbove4Gb                 *string `json:"MmioAbove4Gb,omitempty"`
	MonitorMwait                 *string `json:"MonitorMwait,omitempty"`
	NodeInterleave               *string `json:"NodeInterleave,omitempty"`
	NumLock                      *string `json:"NumLock,omitempty"`
	OneTimeBootMode              *string `json:"OneTimeBootMode,omitempty"`
	OppSrefEn                    *string `json:"OppSrefEn,omitempty"`
	OptimizerMode                *string `json:"OptimizerMode,omitempty"`
	OsAcpiCx                     *string `json:"OsAcpiCx,omitempty"`
	OsWatchdogTimer              *string `json:"OsWatchdogTimer,omitempty"`
	PCIRootDeviceUnhide          *string `json:"PCIRootDeviceUnhide,omitempty"`
	PasswordStatus               *string `json:"PasswordStatus,omitempty"`
	PcieAspmL1                   *string `json:"PcieAspmL1,omitempty"`
	PowerCycleRequest            *string `json:"PowerCycleRequest,omitempty"`
	Proc1TurboCoreNum            *string `json:"Proc1TurboCoreNum,omitempty"`
	Proc2TurboCoreNum            *string `json:"Proc2TurboCoreNum,omitempty"`
	ProcAdjCacheLine             *string `json:"ProcAdjCacheLine,omitempty"`
	ProcAvxP1                    *string `json:"ProcAvxP1,omitempty"`
	ProcC1E                      *string `json:"ProcC1E,omitempty"`
	ProcCStates                  *string `json:"ProcCStates,omitempty"`
	ProcCores                    *string `json:"ProcCores,omitempty"`
	ProcHwPrefetcher             *string `json:"ProcHwPrefetcher,omitempty"`
	ProcPwrPerf                  *string `json:"ProcPwrPerf,omitempty"`
	ProcSwPrefetcher             *string `json:"ProcSwPrefetcher,omitempty"`
	ProcTurboMode                *string `json:"ProcTurboMode,omitempty"`
	ProcVirtualization           *string `json:"ProcVirtualization,omitempty"`
	ProcX2Apic                   *string `json:"ProcX2Apic,omitempty"`
	ProcessorC1AutoDemotion      *string `json:"ProcessorC1AutoDemotion,omitempty"`
	ProcessorC1AutoUnDemotion    *string `json:"ProcessorC1AutoUnDemotion,omitempty"`
	ProcessorGpssTimer           *string `json:"ProcessorGpssTimer,omitempty"`
	ProcessorRaplPrioritization  *string `json:"ProcessorRaplPrioritization,omitempty"`
	PwrButton                    *string `json:"PwrButton,omitempty"`
	PxeDev1EnDis                 *string `json:"PxeDev1EnDis,omitempty"`
	PxeDev1Interface             *string `json:"PxeDev1Interface,omitempty"`
	PxeDev2EnDis                 *string `json:"PxeDev2EnDis,omitempty"`
	PxeDev2Interface             *string `json:"PxeDev2Interface,omitempty"`
	PxeDev3EnDis                 *string `json:"PxeDev3EnDis,omitempty"`
	PxeDev3Interface             *string `json:"PxeDev3Interface,omitempty"`
	PxeDev4EnDis                 *string `json:"PxeDev4EnDis,omitempty"`
	PxeDev4Interface             *string `json:"PxeDev4Interface,omitempty"`
	RedirAfterBoot               *string `json:"RedirAfterBoot,omitempty"`
	RedundantOsLocation          *string `json:"RedundantOsLocation,omitempty"`
	SecurityFreezeLock           *string `json:"SecurityFreezeLock,omitempty"`
	SerialComm                   *string `json:"SerialComm,omitempty"`
	SerialPortAddress            *string `json:"SerialPortAddress,omitempty"`
	SetBootOrderDis              *string `json:"SetBootOrderDis,omitempty"`
	SetBootOrderEn               *string `json:"SetBootOrderEn,omitempty"`
	SetBootOrderFqdd1            *string `json:"SetBootOrderFqdd1,omitempty"`
	SetBootOrderFqdd2            *string `json:"SetBootOrderFqdd2,omitempty"`
	SetBootOrderFqdd3            *string `json:"SetBootOrderFqdd3,omitempty"`
	SetBootOrderFqdd4            *string `json:"SetBootOrderFqdd4,omitempty"`
	SetLegacyHddOrderFqdd1       *string `json:"SetLegacyHddOrderFqdd1,omitempty"`
	SetLegacyHddOrderFqdd2       *string `json:"SetLegacyHddOrderFqdd2,omitempty"`
	Slot1                        *string `json:"Slot1,omitempty"`
	Slot2                        *string `json:"Slot2,omitempty"`
	Slot3                        *string `json:"Slot3,omitempty"`
	SnoopHldOff                  *string `json:"SnoopHldOff,omitempty"`
	SriovGlobalEnable            *string `json:"SriovGlobalEnable,omitempty"`
	SubNumaCluster               *string `json:"SubNumaCluster,omitempty"`
	SysProfile                   *string `json:"SysProfile,omitempty"`
	TpmSecurity                  *string `json:"TpmSecurity,omitempty"`
	UefiVariableAccess           *string `json:"UefiVariableAccess,omitempty"`
	UncoreFrequency              *string `json:"UncoreFrequency,omitempty"`
	UpiPrefetch                  *string `json:"UpiPrefetch,omitempty"`
	UsbManagedPort               *string `json:"UsbManagedPort,omitempty"`
	UsbPorts                     *string `json:"UsbPorts,omitempty"`
	WorkloadConfiguration        *string `json:"WorkloadConfiguration,omitempty"`
	WorkloadProfile              *string `json:"WorkloadProfile,omitempty"`
	WriteCache                   *string `json:"WriteCache,omitempty"`
	WriteDataCrc                 *string `json:"WriteDataCrc,omitempty"`
	WyseP25BIOSAccess            *string `json:"WyseP25BIOSAccess,omitempty"`
	XptPrefetch                  *string `json:"XptPrefetch,omitempty"`
}

// ApiprotoBIOSSpec defines model for apiprotoBIOSSpec.
type ApiprotoBIOSSpec struct {
	Attributes *ApiprotoBIOSSettingsAttributes `json:"Attributes,omitempty"`
}

// ApiprotoBMCAttributesSpec defines model for apiprotoBMCAttributesSpec.
type ApiprotoBMCAttributesSpec struct {
	DNSDomainName            *string `json:"DNSDomainName,omitempty"`
	DNSRacName               *string `json:"DNSRacName,omitempty"`
	IPMILanEnable            *string `json:"IPMILanEnable,omitempty"`
	OSBMCPassThroughState    *string `json:"OSBMCPassThroughState,omitempty"`
	RFSIgnoreCertWarning     *string `json:"RFSIgnoreCertWarning,omitempty"`
	SNMPAgentCommunityName   *string `json:"SNMPAgentCommunityName,omitempty"`
	SNMPAgentEnable          *string `json:"SNMPAgentEnable,omitempty"`
	SNMPDiscoveryPortNumber  *int32  `json:"SNMPDiscoveryPortNumber,omitempty"`
	SNMPProtocol             *string `json:"SNMPProtocol,omitempty"`
	SerialRedirectEnable     *string `json:"SerialRedirectEnable,omitempty"`
	TimeZone                 *string `json:"TimeZone,omitempty"`
	TopologyLLDP             *string `json:"TopologyLLDP,omitempty"`
	VLANEnable               *string `json:"VLANEnable,omitempty"`
	VLANID                   *int32  `json:"VLANID,omitempty"`
	VirtualConsolePluginType *string `json:"VirtualConsolePluginType,omitempty"`
}

// ApiprotoBMCAttributesStatus defines model for apiprotoBMCAttributesStatus.
type ApiprotoBMCAttributesStatus struct {
	DNSDomainName            *string `json:"DNSDomainName,omitempty"`
	DNSRacName               *string `json:"DNSRacName,omitempty"`
	IPMILanEnable            *string `json:"IPMILanEnable,omitempty"`
	OSBMCPassThroughState    *string `json:"OSBMCPassThroughState,omitempty"`
	RFSIgnoreCertWarning     *string `json:"RFSIgnoreCertWarning,omitempty"`
	SNMPAgentCommunityName   *string `json:"SNMPAgentCommunityName,omitempty"`
	SNMPAgentEnable          *string `json:"SNMPAgentEnable,omitempty"`
	SNMPDiscoveryPortNumber  *int32  `json:"SNMPDiscoveryPortNumber,omitempty"`
	SNMPProtocol             *string `json:"SNMPProtocol,omitempty"`
	SerialRedirectEnable     *string `json:"SerialRedirectEnable,omitempty"`
	TimeZone                 *string `json:"TimeZone,omitempty"`
	TopologyLLDP             *string `json:"TopologyLLDP,omitempty"`
	VLANEnable               *string `json:"VLANEnable,omitempty"`
	VLANID                   *int32  `json:"VLANID,omitempty"`
	VirtualConsolePluginType *string `json:"VirtualConsolePluginType,omitempty"`
}

// ApiprotoBMCEventSubscriptionSpec defines model for apiprotoBMCEventSubscriptionSpec.
type ApiprotoBMCEventSubscriptionSpec struct {
	CreateEventSubscriptions *[]ApiprotoCreateBMCEventSubscription `json:"CreateEventSubscriptions,omitempty"`
	DeleteEventSubscriptions *[]ApiprotoDeleteBMCEventSubscription `json:"DeleteEventSubscriptions,omitempty"`
}

// ApiprotoBMCEventSubscriptionStatus defines model for apiprotoBMCEventSubscriptionStatus.
type ApiprotoBMCEventSubscriptionStatus struct {
	Description   *string   `json:"Description,omitempty"`
	Destination   *string   `json:"Destination,omitempty"`
	EventType     *string   `json:"EventType,omitempty"`
	ID            *string   `json:"ID,omitempty"`
	ResourceTypes *[]string `json:"ResourceTypes,omitempty"`
}

// ApiprotoBMCLogForwardSpec defines model for apiprotoBMCLogForwardSpec.
type ApiprotoBMCLogForwardSpec struct {
	EventSubscriptions *ApiprotoBMCEventSubscriptionSpec `json:"EventSubscriptions,omitempty"`
	ServiceEnabled     *string                           `json:"ServiceEnabled,omitempty"`
}

// ApiprotoBMCLogForwardStatus defines model for apiprotoBMCLogForwardStatus.
type ApiprotoBMCLogForwardStatus struct {
	EventSubscriptions *[]ApiprotoBMCEventSubscriptionStatus `json:"EventSubscriptions,omitempty"`
	ServiceEnabled     *string                               `json:"ServiceEnabled,omitempty"`
}

// ApiprotoBMCNICDetails defines model for apiprotoBMCNICDetails.
type ApiprotoBMCNICDetails struct {
	HostName            *string                  `json:"HostName,omitempty"`
	ID                  *string                  `json:"ID,omitempty"`
	IPv4Add             *[]ApiprotoIPv4Addresses `json:"IPv4Add,omitempty"`
	InterfaceEnabled    *bool                    `json:"InterfaceEnabled,omitempty"`
	MTUSize             *int32                   `json:"MTUSize,omitempty"`
	MacAddress          *string                  `json:"MacAddress,omitempty"`
	NameServers         *[]string                `json:"NameServers,omitempty"`
	PermanentMACAddress *string                  `json:"PermanentMACAddress,omitempty"`
	SpeedMbps           *int32                   `json:"SpeedMbps,omitempty"`
	Status              *ApiprotoStatusSpec      `json:"Status,omitempty"`
	VlanDetail          *ApiprotoVLAN            `json:"VlanDetail,omitempty"`
}

// ApiprotoBMCNICSettings defines model for apiprotoBMCNICSettings.
type ApiprotoBMCNICSettings struct {
	DNSFromDHCP *string                        `json:"DNSFromDHCP,omitempty"`
	IPv4Add     *[]ApiprotoIPv4AddressSettings `json:"IPv4Add,omitempty"`
	NameServers *[]string                      `json:"NameServers,omitempty"`
}

// ApiprotoBMCNTPSettings defines model for apiprotoBMCNTPSettings.
type ApiprotoBMCNTPSettings struct {
	NTPServers      *[]string `json:"NTPServers,omitempty"`
	ProtocolEnabled *bool     `json:"ProtocolEnabled,omitempty"`
}

// ApiprotoBMCSpec defines model for apiprotoBMCSpec.
type ApiprotoBMCSpec struct {
	Attributes  *ApiprotoBMCAttributesSpec `json:"Attributes,omitempty"`
	BMCUsers    *ApiprotoBMCUserActions    `json:"BMCUsers,omitempty"`
	NICSettings *[]ApiprotoBMCNICSettings  `json:"NICSettings,omitempty"`
	NTPSettings *ApiprotoBMCNTPSettings    `json:"NTPSettings,omitempty"`
}

// ApiprotoBMCStatus defines model for apiprotoBMCStatus.
type ApiprotoBMCStatus struct {
	Attributes      *ApiprotoBMCAttributesStatus `json:"Attributes,omitempty"`
	BMCUsers        *[]ApiprotoBMCUser           `json:"BMCUsers,omitempty"`
	FirmwareVersion *string                      `json:"FirmwareVersion,omitempty"`
	Licenses        *[]ApiprotoLicenseStatus     `json:"Licenses,omitempty"`
	Model           *string                      `json:"Model,omitempty"`
	NICDetails      *[]ApiprotoBMCNICDetails     `json:"NICDetails,omitempty"`
	NTPSettings     *ApiprotoBMCNTPSettings      `json:"NTPSettings,omitempty"`
	PowerState      *string                      `json:"PowerState,omitempty"`
	Status          *ApiprotoStatusSpec          `json:"Status,omitempty"`
	UUID            *string                      `json:"UUID,omitempty"`
	VMedia          *[]ApiprotoVirtualMedia      `json:"VMedia,omitempty"`
}

// ApiprotoBMCUser defines model for apiprotoBMCUser.
type ApiprotoBMCUser struct {
	Enabled       *bool   `json:"Enabled,omitempty"`
	Password      *string `json:"Password,omitempty"`
	ResetPassword *bool   `json:"ResetPassword,omitempty"`
	RoleID        *string `json:"RoleID,omitempty"`
	UserName      *string `json:"UserName,omitempty"`
}

// ApiprotoBMCUserActions defines model for apiprotoBMCUserActions.
type ApiprotoBMCUserActions struct {
	BMCCreateUsers *[]ApiprotoBMCUser `json:"BMCCreateUsers,omitempty"`
	BMCDeleteUsers *[]ApiprotoBMCUser `json:"BMCDeleteUsers,omitempty"`
	BMCUpdateUsers *[]ApiprotoBMCUser `json:"BMCUpdateUsers,omitempty"`
}

// ApiprotoBaseResource defines model for apiprotoBaseResource.
type ApiprotoBaseResource struct {
	CreatedAt            *string `json:"createdAt,omitempty"`
	CreatedBy            *string `json:"createdBy,omitempty"`
	Description          *string `json:"description,omitempty"`
	Id                   *string `json:"id,omitempty"`
	IsPrivate            *bool   `json:"isPrivate,omitempty"`
	Name                 *string `json:"name,omitempty"`
	ResourceAvailability *string `json:"resourceAvailability,omitempty"`
	Tenant               *string `json:"tenant,omitempty"`
	UpdatedAt            *string `json:"updatedAt,omitempty"`
	Visibility           *string `json:"visibility,omitempty"`
}

// ApiprotoBiosAttrMigChange defines model for apiprotoBiosAttrMigChange.
type ApiprotoBiosAttrMigChange struct {
	NewValue *string `json:"NewValue,omitempty"`
	OldValue *string `json:"OldValue,omitempty"`
}

// ApiprotoBiosMigrationSummary defines model for apiprotoBiosMigrationSummary.
type ApiprotoBiosMigrationSummary struct {
	FromVersion        *string                               `json:"FromVersion,omitempty"`
	MigrationTimeStamp *string                               `json:"MigrationTimeStamp,omitempty"`
	ToVersion          *string                               `json:"ToVersion,omitempty"`
	UpdatedAttributes  *map[string]ApiprotoBiosAttrMigChange `json:"UpdatedAttributes,omitempty"`
}

// ApiprotoBiosStatus defines model for apiprotoBiosStatus.
type ApiprotoBiosStatus struct {
	Attributes       *ApiprotoBIOSAttributes         `json:"Attributes,omitempty"`
	ID               *string                         `json:"ID,omitempty"`
	MigrationSummary *[]ApiprotoBiosMigrationSummary `json:"MigrationSummary,omitempty"`
	Name             *string                         `json:"Name,omitempty"`
}

// ApiprotoBootSpec defines model for apiprotoBootSpec.
type ApiprotoBootSpec struct {
	BootOrder *[]string `json:"BootOrder,omitempty"`
	HddOrder  *[]string `json:"HddOrder,omitempty"`
}

// ApiprotoBootStatus defines model for apiprotoBootStatus.
type ApiprotoBootStatus struct {
	AliasBootOrder               *[]string `json:"AliasBootOrder,omitempty"`
	BootNext                     *string   `json:"BootNext,omitempty"`
	BootOptions                  *string   `json:"BootOptions,omitempty"`
	BootOrder                    *[]string `json:"BootOrder,omitempty"`
	BootOrderPropertySelection   *string   `json:"BootOrderPropertySelection,omitempty"`
	BootSourceOverrideEnabled    *string   `json:"BootSourceOverrideEnabled,omitempty"`
	BootSourceOverrideMode       *string   `json:"BootSourceOverrideMode,omitempty"`
	BootSourceOverrideTarget     *string   `json:"BootSourceOverrideTarget,omitempty"`
	HddOrder                     *[]string `json:"HddOrder,omitempty"`
	UefiTargetBootSourceOverride *string   `json:"UefiTargetBootSourceOverride,omitempty"`
}

// ApiprotoCacheSummarySpec defines model for apiprotoCacheSummarySpec.
type ApiprotoCacheSummarySpec struct {
	TotalCacheSizeMiB *int32 `json:"TotalCacheSizeMiB,omitempty"`
}

// ApiprotoCloud defines model for apiprotoCloud.
type ApiprotoCloud struct {
	CloudDeploymentMode *string                             `json:"cloudDeploymentMode,omitempty"`
	CloudType           *CloudCloudType                     `json:"cloudType,omitempty"`
	ComputeSelectors    *map[string]ApiprotoComputeSelector `json:"computeSelectors,omitempty"`
	MgmtCloudDid        *string                             `json:"mgmtCloudDid,omitempty"`
}

// ApiprotoCompleteBMCAttributes defines model for apiprotoCompleteBMCAttributes.
type ApiprotoCompleteBMCAttributes struct {
	// Attributes `Any` contains an arbitrary serialized protocol buffer message along with a
	// URL that describes the type of the serialized message.
	//
	// Protobuf library provides support to pack/unpack Any values in the form
	// of utility functions or additional generated methods of the Any type.
	//
	// Example 1: Pack and unpack a message in C++.
	//
	//     Foo foo = ...;
	//     Any any;
	//     any.PackFrom(foo);
	//     ...
	//     if (any.UnpackTo(&foo)) {
	//       ...
	//     }
	//
	// Example 2: Pack and unpack a message in Java.
	//
	//     Foo foo = ...;
	//     Any any = Any.pack(foo);
	//     ...
	//     if (any.is(Foo.class)) {
	//       foo = any.unpack(Foo.class);
	//     }
	//
	//  Example 3: Pack and unpack a message in Python.
	//
	//     foo = Foo(...)
	//     any = Any()
	//     any.Pack(foo)
	//     ...
	//     if any.Is(Foo.DESCRIPTOR):
	//       any.Unpack(foo)
	//       ...
	//
	//  Example 4: Pack and unpack a message in Go
	//
	//      foo := &pb.Foo{...}
	//      any, err := anypb.New(foo)
	//      if err != nil {
	//        ...
	//      }
	//      ...
	//      foo := &pb.Foo{}
	//      if err := any.UnmarshalTo(foo); err != nil {
	//        ...
	//      }
	//
	// The pack methods provided by protobuf library will by default use
	// 'type.googleapis.com/full.type.name' as the type URL and the unpack
	// methods only use the fully qualified type name after the last '/'
	// in the type URL, for example "foo.bar.com/x/y.z" will yield type
	// name "y.z".
	//
	//
	// JSON
	// ====
	// The JSON representation of an `Any` value uses the regular
	// representation of the deserialized, embedded message, with an
	// additional field `@type` which contains the type URL. Example:
	//
	//     package google.profile;
	//     message Person {
	//       string first_name = 1;
	//       string last_name = 2;
	//     }
	//
	//     {
	//       "@type": "type.googleapis.com/google.profile.Person",
	//       "firstName": <string>,
	//       "lastName": <string>
	//     }
	//
	// If the embedded message type is well-known and has a custom JSON
	// representation, that representation will be embedded adding a field
	// `value` which holds the custom JSON in addition to the `@type`
	// field. Example (for message [google.protobuf.Duration][]):
	//
	//     {
	//       "@type": "type.googleapis.com/google.protobuf.Duration",
	//       "value": "1.212s"
	//     }
	Attributes *ProtobufAny `json:"attributes,omitempty"`
}

// ApiprotoCompleteBMCStatus defines model for apiprotoCompleteBMCStatus.
type ApiprotoCompleteBMCStatus struct {
	Attributes *ApiprotoCompleteBMCAttributes `json:"Attributes,omitempty"`
}

// ApiprotoCompleteBiosAttributes defines model for apiprotoCompleteBiosAttributes.
type ApiprotoCompleteBiosAttributes struct {
	// Attributes `Any` contains an arbitrary serialized protocol buffer message along with a
	// URL that describes the type of the serialized message.
	//
	// Protobuf library provides support to pack/unpack Any values in the form
	// of utility functions or additional generated methods of the Any type.
	//
	// Example 1: Pack and unpack a message in C++.
	//
	//     Foo foo = ...;
	//     Any any;
	//     any.PackFrom(foo);
	//     ...
	//     if (any.UnpackTo(&foo)) {
	//       ...
	//     }
	//
	// Example 2: Pack and unpack a message in Java.
	//
	//     Foo foo = ...;
	//     Any any = Any.pack(foo);
	//     ...
	//     if (any.is(Foo.class)) {
	//       foo = any.unpack(Foo.class);
	//     }
	//
	//  Example 3: Pack and unpack a message in Python.
	//
	//     foo = Foo(...)
	//     any = Any()
	//     any.Pack(foo)
	//     ...
	//     if any.Is(Foo.DESCRIPTOR):
	//       any.Unpack(foo)
	//       ...
	//
	//  Example 4: Pack and unpack a message in Go
	//
	//      foo := &pb.Foo{...}
	//      any, err := anypb.New(foo)
	//      if err != nil {
	//        ...
	//      }
	//      ...
	//      foo := &pb.Foo{}
	//      if err := any.UnmarshalTo(foo); err != nil {
	//        ...
	//      }
	//
	// The pack methods provided by protobuf library will by default use
	// 'type.googleapis.com/full.type.name' as the type URL and the unpack
	// methods only use the fully qualified type name after the last '/'
	// in the type URL, for example "foo.bar.com/x/y.z" will yield type
	// name "y.z".
	//
	//
	// JSON
	// ====
	// The JSON representation of an `Any` value uses the regular
	// representation of the deserialized, embedded message, with an
	// additional field `@type` which contains the type URL. Example:
	//
	//     package google.profile;
	//     message Person {
	//       string first_name = 1;
	//       string last_name = 2;
	//     }
	//
	//     {
	//       "@type": "type.googleapis.com/google.profile.Person",
	//       "firstName": <string>,
	//       "lastName": <string>
	//     }
	//
	// If the embedded message type is well-known and has a custom JSON
	// representation, that representation will be embedded adding a field
	// `value` which holds the custom JSON in addition to the `@type`
	// field. Example (for message [google.protobuf.Duration][]):
	//
	//     {
	//       "@type": "type.googleapis.com/google.protobuf.Duration",
	//       "value": "1.212s"
	//     }
	Attributes *ProtobufAny `json:"attributes,omitempty"`
}

// ApiprotoCompleteBiosStatus defines model for apiprotoCompleteBiosStatus.
type ApiprotoCompleteBiosStatus struct {
	Attributes *ApiprotoCompleteBiosAttributes `json:"Attributes,omitempty"`
}

// ApiprotoCompute defines model for apiprotoCompute.
type ApiprotoCompute struct {
	// Bios The version or identifier of the Basic Input/Output System (BIOS) firmware used by the compute resource. BIOS is firmware used to perform hardware initialization during the booting process.
	Bios *string `json:"bios,omitempty"`

	// BmcId The unique identifier for the Baseboard Management Controller (BMC) associated with this compute resource. The BMC is responsible for monitoring and managing the hardware of the server, including remote access and diagnostics.
	BmcId *string `json:"bmcId,omitempty"`

	// DiskSize The size of the disk available to the compute resource, measured in megabytes (MB). This field is particularly relevant for virtual machines, indicating the allocated storage capacity.
	DiskSize *int32       `json:"diskSize,omitempty"`
	Kind     *ComputeKind `json:"kind,omitempty"`
	Lom      *ApiprotoLom `json:"lom,omitempty"`

	// Memory The total memory available in the compute resource, measured in bytes. Memory (RAM) is a critical component for storing data that the CPU accesses during operations.
	Memory *string `json:"memory,omitempty"`

	// NpId The unique identifier for the network processor (NP) associated with this compute resource. This ID is used to reference the NP within the system for networking tasks and configurations.
	NpId       *string              `json:"npId,omitempty"`
	Os         *ApiprotoOs          `json:"os,omitempty"`
	RealTimeOS *ComputeRealTime     `json:"realTimeOS,omitempty"`
	Role       *ApiprotoComputeRole `json:"role,omitempty"`

	// Serial The serial number of the compute resource, typically assigned by the manufacturer. This is a unique identifier that is used for tracking and managing the physical hardware.
	Serial *string `json:"serial,omitempty"`

	// SocketCores The number of cores available per CPU socket in the compute resource. CPU cores are the individual processing units within a CPU that perform computations.
	SocketCores *int32 `json:"socketCores,omitempty"`

	// SocketNum The number of CPU sockets available in the compute resource. A CPU socket is a physical connector on the motherboard that allows a microprocessor (CPU) to be installed.
	SocketNum *int32 `json:"socketNum,omitempty"`
}

// ApiprotoComputeRole defines model for apiprotoComputeRole.
type ApiprotoComputeRole string

// ApiprotoComputeSelector defines model for apiprotoComputeSelector.
type ApiprotoComputeSelector struct {
	Labels *[]ApiprotoLabel `json:"labels,omitempty"`

	// NumComputes If missing, may be based on policy.
	NumComputes *int32                       `json:"numComputes,omitempty"`
	Role        *ApiprotoComputeSelectorRole `json:"role,omitempty"`
	RpId        *string                      `json:"rpId,omitempty"`
}

// ApiprotoComputeSelectorRole defines model for apiprotoComputeSelectorRole.
type ApiprotoComputeSelectorRole string

// ApiprotoContactInfo defines model for apiprotoContactInfo.
type ApiprotoContactInfo struct {
	ContactName  *string `json:"ContactName,omitempty"`
	EmailAddress *string `json:"EmailAddress,omitempty"`
	PhoneNumber  *string `json:"PhoneNumber,omitempty"`
}

// ApiprotoCoordinate defines model for apiprotoCoordinate.
type ApiprotoCoordinate struct {
	Latitude  *float32 `json:"latitude,omitempty"`
	Longitude *float32 `json:"longitude,omitempty"`
}

// ApiprotoCreateBMCEventSubscription defines model for apiprotoCreateBMCEventSubscription.
type ApiprotoCreateBMCEventSubscription struct {
	Destination   *string   `json:"Destination,omitempty"`
	EventType     *string   `json:"EventType,omitempty"`
	ResourceTypes *[]string `json:"ResourceTypes,omitempty"`
}

// ApiprotoCreateResourceResp defines model for apiprotoCreateResourceResp.
type ApiprotoCreateResourceResp struct {
	Resource *ApiprotoResource `json:"Resource,omitempty"`
	Resp     *ApiprotoResponse `json:"Resp,omitempty"`
	Tenant   *string           `json:"Tenant,omitempty"`
}

// ApiprotoDecommissionSpec defines model for apiprotoDecommissionSpec.
type ApiprotoDecommissionSpec struct {
	SecureEraseDrives *bool `json:"SecureEraseDrives,omitempty"`
}

// ApiprotoDecommissionStatus defines model for apiprotoDecommissionStatus.
type ApiprotoDecommissionStatus struct {
	OperationFlag     *bool   `json:"OperationFlag,omitempty"`
	SecureEraseDrives *string `json:"SecureEraseDrives,omitempty"`
}

// ApiprotoDeleteBMCEventSubscription defines model for apiprotoDeleteBMCEventSubscription.
type ApiprotoDeleteBMCEventSubscription struct {
	Destination *string `json:"Destination,omitempty"`
	EventType   *string `json:"EventType,omitempty"`
}

// ApiprotoDeleteResourceResp defines model for apiprotoDeleteResourceResp.
type ApiprotoDeleteResourceResp struct {
	Resp   *ApiprotoResponse `json:"Resp,omitempty"`
	Tenant *string           `json:"Tenant,omitempty"`
}

// ApiprotoDeploymentDB defines model for apiprotoDeploymentDB.
type ApiprotoDeploymentDB struct {
	BPDescription    *string    `json:"BPDescription,omitempty"`
	BlueprintName    *string    `json:"BlueprintName,omitempty"`
	BlueprintVersion *string    `json:"BlueprintVersion,omitempty"`
	DeploymentName   *string    `json:"DeploymentName,omitempty"`
	IsLatest         *bool      `json:"IsLatest,omitempty"`
	LastUpdatedAt    *time.Time `json:"LastUpdatedAt,omitempty"`
	LastUpdatedBy    *string    `json:"LastUpdatedBy,omitempty"`
}

// ApiprotoDeploymentStatus defines model for apiprotoDeploymentStatus.
type ApiprotoDeploymentStatus struct {
	CreateExecution *string `json:"CreateExecution,omitempty"`

	// DeploymentStatus The overall deployment status.
	DeploymentStatus *string `json:"DeploymentStatus,omitempty"`

	// EnvironmentType The environment type. Represents the value of csys-env-type label attached to deployment.
	EnvironmentType   *string `json:"EnvironmentType,omitempty"`
	HasSubDeployments *bool   `json:"HasSubDeployments,omitempty"`

	// InstallationStatus The deployment installation status.
	InstallationStatus *string `json:"InstallationStatus,omitempty"`
	LatestExecution    *string `json:"LatestExecution,omitempty"`

	// LatestExecutionFinishedOperations The finished operations for latest execution of deployment.
	LatestExecutionFinishedOperations *int32 `json:"LatestExecutionFinishedOperations,omitempty"`

	// LatestExecutionStatus The deployment latest execution status.
	LatestExecutionStatus *string `json:"LatestExecutionStatus,omitempty"`

	// LatestExecutionTotalOperations The total operations for latest execution of deployment.
	LatestExecutionTotalOperations *int32 `json:"LatestExecutionTotalOperations,omitempty"`

	// SubEnvironmentsCount The aggregated sub environments count.
	SubEnvironmentsCount *int32 `json:"SubEnvironmentsCount,omitempty"`

	// SubEnvironmentsStatus The aggregated sub environments(deployments) status.
	SubEnvironmentsStatus *string `json:"SubEnvironmentsStatus,omitempty"`

	// SubServicesCount The aggregated sub services count.
	SubServicesCount *int32 `json:"SubServicesCount,omitempty"`

	// SubServicesStatus The aggregated sub services(deployments) status.
	SubServicesStatus *string `json:"SubServicesStatus,omitempty"`
}

// ApiprotoDriftData defines model for apiprotoDriftData.
type ApiprotoDriftData struct {
	CoreCount       *ApiprotodriftValues `json:"CoreCount,omitempty"`
	FirmwareVersion *ApiprotodriftValues `json:"FirmwareVersion,omitempty"`
	HwModel         *ApiprotodriftValues `json:"HwModel,omitempty"`
}

// ApiprotoDriftReports defines model for apiprotoDriftReports.
type ApiprotoDriftReports struct {
	DriftTemplateIDs *[]string                          `json:"DriftTemplateIDs,omitempty"`
	Drifts           *map[string]map[string]interface{} `json:"Drifts,omitempty"`
	LastScan         *string                            `json:"LastScan,omitempty"`
	State            *string                            `json:"State,omitempty"`
	Status           *string                            `json:"Status,omitempty"`
}

// ApiprotoDriftReportsBrief defines model for apiprotoDriftReportsBrief.
type ApiprotoDriftReportsBrief struct {
	LastScan *string `json:"LastScan,omitempty"`
	State    *string `json:"State,omitempty"`
	Status   *string `json:"Status,omitempty"`
}

// ApiprotoDrive defines model for apiprotoDrive.
type ApiprotoDrive struct {
	BlockSizeBytes                *int32                  `json:"BlockSizeBytes,omitempty"`
	CapableSpeedGbs               *int32                  `json:"CapableSpeedGbs,omitempty"`
	CapacityBytes                 *string                 `json:"CapacityBytes,omitempty"`
	Description                   *string                 `json:"Description,omitempty"`
	DeviceProtocol                *string                 `json:"DeviceProtocol,omitempty"`
	EncryptionAbility             *string                 `json:"EncryptionAbility,omitempty"`
	EncryptionStatus              *string                 `json:"EncryptionStatus,omitempty"`
	FailurePredicted              *bool                   `json:"FailurePredicted,omitempty"`
	HotspareType                  *string                 `json:"HotspareType,omitempty"`
	ID                            *string                 `json:"ID,omitempty"`
	Identifiers                   *[]ApiprotoIdentifier   `json:"Identifiers,omitempty"`
	Location                      *[]ApiprotoLocationSpec `json:"Location,omitempty"`
	Manufacturer                  *string                 `json:"Manufacturer,omitempty"`
	MediaType                     *string                 `json:"MediaType,omitempty"`
	Model                         *string                 `json:"Model,omitempty"`
	Name                          *string                 `json:"Name,omitempty"`
	NegotiatedSpeedGbs            *int32                  `json:"NegotiatedSpeedGbs,omitempty"`
	Operations                    *[]ApiprotoOperation    `json:"Operations,omitempty"`
	PartNumber                    *string                 `json:"PartNumber,omitempty"`
	PhysicalLocation              *ApiprotoLocationSpec   `json:"PhysicalLocation,omitempty"`
	PredictedMediaLifeLeftPercent *float32                `json:"PredictedMediaLifeLeftPercent,omitempty"`
	Protocol                      *string                 `json:"Protocol,omitempty"`
	Revision                      *string                 `json:"Revision,omitempty"`
	RotationSpeedRPM              *int32                  `json:"RotationSpeedRPM,omitempty"`
	SerialNumber                  *string                 `json:"SerialNumber,omitempty"`
	Status                        *ApiprotoStatusSpec     `json:"Status,omitempty"`
	VolumeIDs                     *[]string               `json:"VolumeIDs,omitempty"`
	VolumesCount                  *int32                  `json:"VolumesCount,omitempty"`
}

// ApiprotoEthernetInterfaceSpec defines model for apiprotoEthernetInterfaceSpec.
type ApiprotoEthernetInterfaceSpec struct {
	AutoNeg               *bool               `json:"AutoNeg,omitempty"`
	Description           *string             `json:"Description,omitempty"`
	EthernetInterfaceType *string             `json:"EthernetInterfaceType,omitempty"`
	ID                    *string             `json:"ID,omitempty"`
	LinkStatus            *string             `json:"LinkStatus,omitempty"`
	MACAddress            *string             `json:"MACAddress,omitempty"`
	MTUSize               *int32              `json:"MTUSize,omitempty"`
	Name                  *string             `json:"Name,omitempty"`
	PermanentMACAddress   *string             `json:"PermanentMACAddress,omitempty"`
	SpeedMbps             *int32              `json:"SpeedMbps,omitempty"`
	Status                *ApiprotoStatusSpec `json:"Status,omitempty"`
}

// ApiprotoFPGA defines model for apiprotoFPGA.
type ApiprotoFPGA struct {
	BoardPartNumber   *string `json:"BoardPartNumber,omitempty"`
	DeviceDescription *string `json:"DeviceDescription,omitempty"`
	FQDD              *string `json:"FQDD,omitempty"`
	Model             *string `json:"Model,omitempty"`
	Name              *string `json:"Name,omitempty"`
}

// ApiprotoFactoryResetCompletedStatus defines model for apiprotoFactoryResetCompletedStatus.
type ApiprotoFactoryResetCompletedStatus struct {
	BIOS      *bool `json:"BIOS,omitempty"`
	BMC       *bool `json:"BMC,omitempty"`
	ClearJobs *bool `json:"ClearJobs,omitempty"`
	Storage   *bool `json:"Storage,omitempty"`
}

// ApiprotoFactoryResetSpec defines model for apiprotoFactoryResetSpec.
type ApiprotoFactoryResetSpec struct {
	BIOS         *bool   `json:"BIOS,omitempty"`
	BMC          *bool   `json:"BMC,omitempty"`
	BMCResetType *string `json:"BMCResetType,omitempty"`
	ClearJobs    *bool   `json:"ClearJobs,omitempty"`
	Storage      *bool   `json:"Storage,omitempty"`
}

// ApiprotoFilter defines model for apiprotoFilter.
type ApiprotoFilter struct {
	Key      *string         `json:"Key,omitempty"`
	Values   *[]string       `json:"Values,omitempty"`
	Operator *FilterOperator `json:"operator,omitempty"`
}

// ApiprotoFirmwareSpec defines model for apiprotoFirmwareSpec.
type ApiprotoFirmwareSpec struct {
	Description     *string             `json:"Description,omitempty"`
	ID              *string             `json:"ID,omitempty"`
	Name            *string             `json:"Name,omitempty"`
	PreviousVersion *string             `json:"PreviousVersion,omitempty"`
	SoftwareID      *string             `json:"SoftwareID,omitempty"`
	Status          *ApiprotoStatusSpec `json:"Status,omitempty"`
	Updateable      *bool               `json:"Updateable,omitempty"`
	Version         *string             `json:"Version,omitempty"`
}

// ApiprotoGetInvRetentionPolicyResp defines model for apiprotoGetInvRetentionPolicyResp.
type ApiprotoGetInvRetentionPolicyResp struct {
	Error           *ApiprotoAPIError `json:"Error,omitempty"`
	Message         *string           `json:"Message,omitempty"`
	RetentionPeriod *int32            `json:"RetentionPeriod,omitempty"`
	Tenant          *string           `json:"Tenant,omitempty"`
}

// ApiprotoGetLocationInventoryResp defines model for apiprotoGetLocationInventoryResp.
type ApiprotoGetLocationInventoryResp struct {
	Error    *ApiprotoAPIError          `json:"Error,omitempty"`
	Location *ApiprotoLocationInventory `json:"Location,omitempty"`
	Status   *ApiprotoStatus            `json:"Status,omitempty"`
	Tenant   *string                    `json:"Tenant,omitempty"`
}

// ApiprotoGetLocationsInventoryResp defines model for apiprotoGetLocationsInventoryResp.
type ApiprotoGetLocationsInventoryResp struct {
	Error     *ApiprotoAPIError            `json:"Error,omitempty"`
	Locations *[]ApiprotoLocationInventory `json:"Locations,omitempty"`
	Status    *ApiprotoStatus              `json:"Status,omitempty"`
	Tenant    *string                      `json:"Tenant,omitempty"`
}

// ApiprotoGetResourceDeploymentsResp defines model for apiprotoGetResourceDeploymentsResp.
type ApiprotoGetResourceDeploymentsResp struct {
	Deployments *[]ApiprotoDeploymentDB `json:"Deployments,omitempty"`
	Id          *string                 `json:"Id,omitempty"`
	Resp        *ApiprotoResponse       `json:"Resp,omitempty"`
	Tenant      *string                 `json:"Tenant,omitempty"`
}

// ApiprotoGetResourceInvResp defines model for apiprotoGetResourceInvResp.
type ApiprotoGetResourceInvResp struct {
	Error    *ApiprotoAPIError    `json:"Error,omitempty"`
	Resource *ApiprotoResourceInv `json:"Resource,omitempty"`
	Status   *ApiprotoStatus      `json:"Status,omitempty"`
	Tenant   *string              `json:"Tenant,omitempty"`
}

// ApiprotoGetResourcePoolInventoryResp defines model for apiprotoGetResourcePoolInventoryResp.
type ApiprotoGetResourcePoolInventoryResp struct {
	Error  *ApiprotoAPIError              `json:"Error,omitempty"`
	Rp     *ApiprotoResourcePoolInventory `json:"Rp,omitempty"`
	Status *ApiprotoStatus                `json:"Status,omitempty"`
	Tenant *string                        `json:"Tenant,omitempty"`
}

// ApiprotoGetResourcePoolsInventoryResp defines model for apiprotoGetResourcePoolsInventoryResp.
type ApiprotoGetResourcePoolsInventoryResp struct {
	Error  *ApiprotoAPIError                `json:"Error,omitempty"`
	Rps    *[]ApiprotoResourcePoolInventory `json:"Rps,omitempty"`
	Status *ApiprotoStatus                  `json:"Status,omitempty"`
	Tenant *string                          `json:"Tenant,omitempty"`
}

// ApiprotoGetResourceResp defines model for apiprotoGetResourceResp.
type ApiprotoGetResourceResp struct {
	Resource *ApiprotoResource `json:"Resource,omitempty"`
	Resp     *ApiprotoResponse `json:"Resp,omitempty"`
	Tenant   *string           `json:"Tenant,omitempty"`
}

// ApiprotoGetResourceSubscriptionResp defines model for apiprotoGetResourceSubscriptionResp.
type ApiprotoGetResourceSubscriptionResp struct {
	ResourceSubscription *[]ApiprotoResourceSubscriptionResp `json:"ResourceSubscription,omitempty"`
	Resp                 *ApiprotoResponse                   `json:"Resp,omitempty"`
	Tenant               *string                             `json:"Tenant,omitempty"`
}

// ApiprotoGetResourceSubscriptionsResp defines model for apiprotoGetResourceSubscriptionsResp.
type ApiprotoGetResourceSubscriptionsResp struct {
	Pagination           *ApiprotoPagination                 `json:"Pagination,omitempty"`
	ResourceSubscription *[]ApiprotoResourceSubscriptionResp `json:"ResourceSubscription,omitempty"`
	Resp                 *ApiprotoResponse                   `json:"Resp,omitempty"`
}

// ApiprotoGetResourcesInvResp defines model for apiprotoGetResourcesInvResp.
type ApiprotoGetResourcesInvResp struct {
	Error     *ApiprotoAPIError      `json:"Error,omitempty"`
	Resources *[]ApiprotoResourceInv `json:"Resources,omitempty"`
	Status    *ApiprotoStatus        `json:"Status,omitempty"`
	Tenant    *string                `json:"Tenant,omitempty"`
}

// ApiprotoGetResourcesResp defines model for apiprotoGetResourcesResp.
type ApiprotoGetResourcesResp struct {
	Pagination *ApiprotoPagination `json:"Pagination,omitempty"`
	Resources  *[]ApiprotoResource `json:"Resources,omitempty"`
	Resp       *ApiprotoResponse   `json:"Resp,omitempty"`
	Tenant     *string             `json:"Tenant,omitempty"`
}

// ApiprotoGetServerInventoryResp defines model for apiprotoGetServerInventoryResp.
type ApiprotoGetServerInventoryResp struct {
	Error  *ApiprotoAPIError `json:"Error,omitempty"`
	Server *ApiprotoServer   `json:"Server,omitempty"`
}

// ApiprotoGetServersInventoryResp defines model for apiprotoGetServersInventoryResp.
type ApiprotoGetServersInventoryResp struct {
	CachedServers *[]ApiprotoServerBrief `json:"CachedServers,omitempty"`
	Error         *ApiprotoAPIError      `json:"Error,omitempty"`
	ServerCount   *string                `json:"ServerCount,omitempty"`
	Servers       *[]ApiprotoServer      `json:"Servers,omitempty"`
}

// ApiprotoGetSiteInventoryResp defines model for apiprotoGetSiteInventoryResp.
type ApiprotoGetSiteInventoryResp struct {
	Error  *ApiprotoAPIError      `json:"Error,omitempty"`
	Site   *ApiprotoSiteInventory `json:"Site,omitempty"`
	Status *ApiprotoStatus        `json:"Status,omitempty"`
	Tenant *string                `json:"Tenant,omitempty"`
}

// ApiprotoGetSitesInventoryResp defines model for apiprotoGetSitesInventoryResp.
type ApiprotoGetSitesInventoryResp struct {
	Error  *ApiprotoAPIError        `json:"Error,omitempty"`
	Sites  *[]ApiprotoSiteInventory `json:"Sites,omitempty"`
	Status *ApiprotoStatus          `json:"Status,omitempty"`
	Tenant *string                  `json:"Tenant,omitempty"`
}

// ApiprotoGroups defines model for apiprotoGroups.
type ApiprotoGroups struct {
	Group *[]string `json:"group,omitempty"`
}

// ApiprotoIPv4AddressSettings defines model for apiprotoIPv4AddressSettings.
type ApiprotoIPv4AddressSettings struct {
	Address    *string `json:"Address,omitempty"`
	Gateway    *string `json:"Gateway,omitempty"`
	SubnetMask *string `json:"SubnetMask,omitempty"`
}

// ApiprotoIPv4Addresses defines model for apiprotoIPv4Addresses.
type ApiprotoIPv4Addresses struct {
	Address       *string `json:"Address,omitempty"`
	AddressOrigin *string `json:"AddressOrigin,omitempty"`
	Gateway       *string `json:"Gateway,omitempty"`
	SubnetMask    *string `json:"SubnetMask,omitempty"`
}

// ApiprotoIdentifier defines model for apiprotoIdentifier.
type ApiprotoIdentifier struct {
	DurableName       *string `json:"DurableName,omitempty"`
	DurableNameFormat *string `json:"DurableNameFormat,omitempty"`
}

// ApiprotoInputRange defines model for apiprotoInputRange.
type ApiprotoInputRange struct {
	InputType          *string `json:"InputType,omitempty"`
	MaximumFrequencyHz *int32  `json:"MaximumFrequencyHz,omitempty"`
	MaximumVoltage     *int32  `json:"MaximumVoltage,omitempty"`
	MinimumFrequencyHz *int32  `json:"MinimumFrequencyHz,omitempty"`
	MinimumVoltage     *int32  `json:"MinimumVoltage,omitempty"`
	OutputWattage      *int32  `json:"OutputWattage,omitempty"`
}

// ApiprotoInstalledOsConfigSpec defines model for apiprotoInstalledOsConfigSpec.
type ApiprotoInstalledOsConfigSpec struct {
	NICBonding *[]ApiprotoNICBondingDetailsSpec `json:"NICBonding,omitempty"`
	OsIP       *string                          `json:"OsIP,omitempty"`
	Password   *string                          `json:"Password,omitempty"`
	UserName   *string                          `json:"UserName,omitempty"`
}

// ApiprotoLabel defines model for apiprotoLabel.
type ApiprotoLabel struct {
	Key   *string `json:"Key,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// ApiprotoLicenseStatus defines model for apiprotoLicenseStatus.
type ApiprotoLicenseStatus struct {
	LicenseDescription *string `json:"LicenseDescription,omitempty"`
}

// ApiprotoLocationInventory defines model for apiprotoLocationInventory.
type ApiprotoLocationInventory struct {
	Address          *ApiprotoAddress        `json:"Address,omitempty"`
	Coordinate       *ApiprotoCoordinate     `json:"Coordinate,omitempty"`
	DeletedAt        *string                 `json:"DeletedAt,omitempty"`
	Description      *string                 `json:"Description,omitempty"`
	GlobalLocationId *string                 `json:"GlobalLocationId,omitempty"`
	Id               *string                 `json:"Id,omitempty"`
	IsDeleted        *bool                   `json:"IsDeleted,omitempty"`
	Labels           *[]ApiprotoLabel        `json:"Labels,omitempty"`
	Name             *string                 `json:"Name,omitempty"`
	Sites            *ApiprotoSitesInventory `json:"Sites,omitempty"`
	State            *string                 `json:"State,omitempty"`
}

// ApiprotoLocationSpec defines model for apiprotoLocationSpec.
type ApiprotoLocationSpec struct {
	AltitudeMeters *int32                     `json:"AltitudeMeters,omitempty"`
	Contacts       *[]ApiprotoContactInfo     `json:"Contacts,omitempty"`
	Info           *string                    `json:"Info,omitempty"`
	InfoFormat     *string                    `json:"InfoFormat,omitempty"`
	Latitude       *float64                   `json:"Latitude,omitempty"`
	Longitude      *float64                   `json:"Longitude,omitempty"`
	PartLocation   *ApiprotoPartLocationSpec  `json:"PartLocation,omitempty"`
	Placement      *ApiprotoPlacementSpec     `json:"Placement,omitempty"`
	PostalAddress  *ApiprotoPostalAddressSpec `json:"PostalAddress,omitempty"`
}

// ApiprotoLom defines model for apiprotoLom.
type ApiprotoLom struct {
	ApiKey *string `json:"apiKey,omitempty"`

	// IpAddress This is represents ipAddress for the compute
	IpAddress *string `json:"ipAddress,omitempty"`

	// MacAddress This is represents macAddress for the compute
	MacAddress *string `json:"macAddress,omitempty"`

	// Password Password is the cloudify secret created from compute password
	Password *string `json:"password,omitempty"`
	Port     *int32  `json:"port,omitempty"`
	Protocol *string `json:"protocol,omitempty"`

	// User This is the user name for the compute node
	User *string `json:"user,omitempty"`
}

// ApiprotoMemorySpec defines model for apiprotoMemorySpec.
type ApiprotoMemorySpec struct {
	AllowedSpeedsMHz                        *[]int32            `json:"AllowedSpeedsMHz,omitempty"`
	BaseModuleType                          *string             `json:"BaseModuleType,omitempty"`
	BusWidthBits                            *int32              `json:"BusWidthBits,omitempty"`
	CacheSizeMiB                            *int32              `json:"CacheSizeMiB,omitempty"`
	CapacityMiB                             *int32              `json:"CapacityMiB,omitempty"`
	DataWidthBits                           *int32              `json:"DataWidthBits,omitempty"`
	Description                             *string             `json:"Description,omitempty"`
	DeviceLocator                           *string             `json:"DeviceLocator,omitempty"`
	ErrorCorrection                         *string             `json:"ErrorCorrection,omitempty"`
	FirmwareRevision                        *string             `json:"FirmwareRevision,omitempty"`
	ID                                      *string             `json:"ID,omitempty"`
	LogicalSizeMiB                          *int32              `json:"LogicalSizeMiB,omitempty"`
	Manufacturer                            *string             `json:"Manufacturer,omitempty"`
	MaxTDPMilliWatts                        *[]int32            `json:"MaxTDPMilliWatts,omitempty"`
	MemoryDeviceType                        *string             `json:"MemoryDeviceType,omitempty"`
	MemorySubsystemControllerManufacturerID *string             `json:"MemorySubsystemControllerManufacturerID,omitempty"`
	MemorySubsystemControllerProductID      *string             `json:"MemorySubsystemControllerProductID,omitempty"`
	MemoryType                              *string             `json:"MemoryType,omitempty"`
	ModuleManufacturerID                    *string             `json:"ModuleManufacturerID,omitempty"`
	ModuleProductID                         *string             `json:"ModuleProductID,omitempty"`
	Name                                    *string             `json:"Name,omitempty"`
	NonVolatileSizeMiB                      *int32              `json:"NonVolatileSizeMiB,omitempty"`
	OperatingMemoryModes                    *[]string           `json:"OperatingMemoryModes,omitempty"`
	OperatingSpeedMhz                       *int32              `json:"OperatingSpeedMhz,omitempty"`
	PartNumber                              *string             `json:"PartNumber,omitempty"`
	RankCount                               *int32              `json:"RankCount,omitempty"`
	SerialNumber                            *string             `json:"SerialNumber,omitempty"`
	Status                                  *ApiprotoStatusSpec `json:"Status,omitempty"`
	VolatileSizeMiB                         *int32              `json:"VolatileSizeMiB,omitempty"`
}

// ApiprotoMetricReportSpec defines model for apiprotoMetricReportSpec.
type ApiprotoMetricReportSpec struct {
	Name *string `json:"Name,omitempty"`
}

// ApiprotoMetricReportStatus defines model for apiprotoMetricReportStatus.
type ApiprotoMetricReportStatus struct {
	MetricValues *[]ApiprotoMetricValue `json:"MetricValues,omitempty"`
	Name         *string                `json:"Name,omitempty"`
}

// ApiprotoMetricSpec defines model for apiprotoMetricSpec.
type ApiprotoMetricSpec struct {
	MetricReports     *[]ApiprotoMetricReportSpec `json:"MetricReports,omitempty"`
	PollFrequencyMins *int32                      `json:"PollFrequencyMins,omitempty"`
}

// ApiprotoMetricStatus defines model for apiprotoMetricStatus.
type ApiprotoMetricStatus struct {
	MetricReports     *[]ApiprotoMetricReportStatus `json:"MetricReports,omitempty"`
	NextPoll          *string                       `json:"NextPoll,omitempty"`
	PollFrequencyMins *int32                        `json:"PollFrequencyMins,omitempty"`
}

// ApiprotoMetricValue defines model for apiprotoMetricValue.
type ApiprotoMetricValue struct {
	MetricID   *string `json:"MetricID,omitempty"`
	SourceFQDD *string `json:"SourceFQDD,omitempty"`
	TimeStamp  *string `json:"TimeStamp,omitempty"`
	Value      *string `json:"Value,omitempty"`
}

// ApiprotoNICBondingDetails defines model for apiprotoNICBondingDetails.
type ApiprotoNICBondingDetails struct {
	BondingName *string `json:"BondingName,omitempty"`
}

// ApiprotoNICBondingDetailsSpec defines model for apiprotoNICBondingDetailsSpec.
type ApiprotoNICBondingDetailsSpec struct {
	BondingName *string   `json:"BondingName,omitempty"`
	Miion       *string   `json:"Miion,omitempty"`
	Mode        *string   `json:"Mode,omitempty"`
	NICCards    *[]string `json:"NICCards,omitempty"`
}

// ApiprotoNetworkAdapterGlobalSettingsSpec defines model for apiprotoNetworkAdapterGlobalSettingsSpec.
type ApiprotoNetworkAdapterGlobalSettingsSpec struct {
	AdapterErrorRecovery *string `json:"AdapterErrorRecovery,omitempty"`
	BannerMessageTimeout *int32  `json:"BannerMessageTimeout,omitempty"`
	HideSetupPrompt      *string `json:"HideSetupPrompt,omitempty"`
	MaxPfMsixVectors     *int32  `json:"MaxPfMsixVectors,omitempty"`
	SetupKey             *string `json:"SetupKey,omitempty"`
	VirtualizationMode   *string `json:"VirtualizationMode,omitempty"`
}

// ApiprotoNetworkAdapterGlobalSettingsStatus defines model for apiprotoNetworkAdapterGlobalSettingsStatus.
type ApiprotoNetworkAdapterGlobalSettingsStatus struct {
	AdapterErrorRecovery *string `json:"AdapterErrorRecovery,omitempty"`
	BannerMessageTimeout *int32  `json:"BannerMessageTimeout,omitempty"`
	HideSetupPrompt      *string `json:"HideSetupPrompt,omitempty"`
	MaxPfMsixVectors     *int32  `json:"MaxPfMsixVectors,omitempty"`
	SetupKey             *string `json:"SetupKey,omitempty"`
	VirtualizationMode   *string `json:"VirtualizationMode,omitempty"`
}

// ApiprotoNetworkAdapterPortSettingsSpec defines model for apiprotoNetworkAdapterPortSettingsSpec.
type ApiprotoNetworkAdapterPortSettingsSpec struct {
	ANProtocol              *string `json:"ANProtocol,omitempty"`
	BootOptionROM           *string `json:"BootOptionROM,omitempty"`
	BootRetryCnt            *string `json:"BootRetryCnt,omitempty"`
	BootStrapType           *string `json:"BootStrapType,omitempty"`
	DCBX                    *string `json:"DCBX,omitempty"`
	DefaultEVBMode          *string `json:"DefaultEVBMode,omitempty"`
	ForwardErrorCorrection  *string `json:"ForwardErrorCorrection,omitempty"`
	LegacyBootProto         *string `json:"LegacyBootProto,omitempty"`
	MediaAutoDetect         *string `json:"MediaAutoDetect,omitempty"`
	MsixVectorsPerVf        *int32  `json:"MsixVectorsPerVf,omitempty"`
	OperationalLnkSpeed     *string `json:"OperationalLnkSpeed,omitempty"`
	PermitTotalPortShutdown *string `json:"PermitTotalPortShutdown,omitempty"`
	PortLinkTraining        *string `json:"PortLinkTraining,omitempty"`
	RDMANICModeOnPort       *string `json:"RDMANICModeOnPort,omitempty"`
	VLanMode                *string `json:"VLanMode,omitempty"`
	WakeOnLan               *string `json:"WakeOnLan,omitempty"`
}

// ApiprotoNetworkAdapterPortSettingsStatus defines model for apiprotoNetworkAdapterPortSettingsStatus.
type ApiprotoNetworkAdapterPortSettingsStatus struct {
	ANProtocol                 *string `json:"ANProtocol,omitempty"`
	AutodetectSpeedExcludeMask *int32  `json:"AutodetectSpeedExcludeMask,omitempty"`
	BlnkLeds                   *int32  `json:"BlnkLeds,omitempty"`
	BootOptionROM              *string `json:"BootOptionROM,omitempty"`
	BootRetryCnt               *string `json:"BootRetryCnt,omitempty"`
	BootStrapType              *string `json:"BootStrapType,omitempty"`
	DCBX                       *string `json:"DCBX,omitempty"`
	DefaultEVBMode             *string `json:"DefaultEVBMode,omitempty"`
	ForwardErrorCorrection     *string `json:"ForwardErrorCorrection,omitempty"`
	LegacyBootProto            *string `json:"LegacyBootProto,omitempty"`
	MediaAutoDetect            *string `json:"MediaAutoDetect,omitempty"`
	MsixVectorsPerVf           *int32  `json:"MsixVectorsPerVf,omitempty"`
	NumberVFAdvertised         *int32  `json:"NumberVFAdvertised,omitempty"`
	OperationalLnkSpeed        *string `json:"OperationalLnkSpeed,omitempty"`
	PXEBootSupport             *string `json:"PXEBootSupport,omitempty"`
	PermitTotalPortShutdown    *string `json:"PermitTotalPortShutdown,omitempty"`
	PortLinkTraining           *string `json:"PortLinkTraining,omitempty"`
	RDMANICModeOnPort          *string `json:"RDMANICModeOnPort,omitempty"`
	VLanMode                   *string `json:"VLanMode,omitempty"`
	WakeOnLan                  *string `json:"WakeOnLan,omitempty"`
}

// ApiprotoNetworkAdapterPortsSpec defines model for apiprotoNetworkAdapterPortsSpec.
type ApiprotoNetworkAdapterPortsSpec struct {
	Attributes *ApiprotoNetworkAdapterPortSettingsSpec `json:"Attributes,omitempty"`
	ID         *string                                 `json:"ID,omitempty"`
}

// ApiprotoNetworkAdapterPortsStatus defines model for apiprotoNetworkAdapterPortsStatus.
type ApiprotoNetworkAdapterPortsStatus struct {
	AssociatedNetworkAddresses *[]string                                 `json:"AssociatedNetworkAddresses,omitempty"`
	Attributes                 *ApiprotoNetworkAdapterPortSettingsStatus `json:"Attributes,omitempty"`
	ID                         *string                                   `json:"ID,omitempty"`
	LinkStatus                 *string                                   `json:"LinkStatus,omitempty"`
	Name                       *string                                   `json:"Name,omitempty"`
	PhysicalPortNumber         *string                                   `json:"PhysicalPortNumber,omitempty"`
	SupportedLinkCapabilities  *[]ApiprotoSupportedLinkCapability        `json:"SupportedLinkCapabilities,omitempty"`
}

// ApiprotoNetworkAdapterStatus defines model for apiprotoNetworkAdapterStatus.
type ApiprotoNetworkAdapterStatus struct {
	Attributes       *ApiprotoNetworkAdapterGlobalSettingsStatus `json:"Attributes,omitempty"`
	Manufacturer     *string                                     `json:"Manufacturer,omitempty"`
	Model            *string                                     `json:"Model,omitempty"`
	NetworkAdapterID *string                                     `json:"NetworkAdapterID,omitempty"`
	NetworkPorts     *[]ApiprotoNetworkAdapterPortsStatus        `json:"NetworkPorts,omitempty"`
	PartNumber       *string                                     `json:"PartNumber,omitempty"`
	SerialNumber     *string                                     `json:"SerialNumber,omitempty"`
	Version          *string                                     `json:"Version,omitempty"`
}

// ApiprotoNetworkInterfaceSpec defines model for apiprotoNetworkInterfaceSpec.
type ApiprotoNetworkInterfaceSpec = map[string]interface{}

// ApiprotoNicAdapterSpec defines model for apiprotoNicAdapterSpec.
type ApiprotoNicAdapterSpec struct {
	Attributes       *ApiprotoNetworkAdapterGlobalSettingsSpec `json:"Attributes,omitempty"`
	NetworkAdapterID *string                                   `json:"NetworkAdapterID,omitempty"`
	NicPorts         *[]ApiprotoNetworkAdapterPortsSpec        `json:"NicPorts,omitempty"`
}

// ApiprotoNicFirmwareInfo defines model for apiprotoNicFirmwareInfo.
type ApiprotoNicFirmwareInfo struct {
	NicFwVersion *string `json:"NicFwVersion,omitempty"`
	NicId        *string `json:"NicId,omitempty"`
}

// ApiprotoOSDetailsStatus defines model for apiprotoOSDetailsStatus.
type ApiprotoOSDetailsStatus struct {
	DNSSearch     *[]string                     `json:"DNSSearch,omitempty"`
	DNSServer     *[]string                     `json:"DNSServer,omitempty"`
	DriverDetails *[]ApiprotoOSDriverDetails    `json:"DriverDetails,omitempty"`
	HostName      *string                       `json:"HostName,omitempty"`
	IPAddrDetails *[]ApiprotoOSIPAddressDetails `json:"IPAddrDetails,omitempty"`
	NICBonding    *[]ApiprotoNICBondingDetails  `json:"NICBonding,omitempty"`
	NTPServer     *[]string                     `json:"NTPServer,omitempty"`
	OSVersion     *string                       `json:"OSVersion,omitempty"`
}

// ApiprotoOSDriverDetails defines model for apiprotoOSDriverDetails.
type ApiprotoOSDriverDetails struct {
	Type    *string `json:"Type,omitempty"`
	Version *string `json:"Version,omitempty"`
}

// ApiprotoOSIPAddressDetails defines model for apiprotoOSIPAddressDetails.
type ApiprotoOSIPAddressDetails struct {
	IPAddress *string `json:"IPAddress,omitempty"`
	NICName   *string `json:"NICName,omitempty"`
}

// ApiprotoOSIPAddressDetailsSpec defines model for apiprotoOSIPAddressDetailsSpec.
type ApiprotoOSIPAddressDetailsSpec struct {
	Gateway   *string `json:"Gateway,omitempty"`
	IPAddress *string `json:"IPAddress,omitempty"`
	NICName   *string `json:"NICName,omitempty"`
	NetMask   *string `json:"NetMask,omitempty"`
}

// ApiprotoOSInstallVolumeMeta defines model for apiprotoOSInstallVolumeMeta.
type ApiprotoOSInstallVolumeMeta struct {
	Name *string `json:"Name,omitempty"`
	Type *string `json:"Type,omitempty"`
}

// ApiprotoOSNetworkingDetails defines model for apiprotoOSNetworkingDetails.
type ApiprotoOSNetworkingDetails struct {
	BootProto *string                         `json:"BootProto,omitempty"`
	DNSSearch *[]string                       `json:"DNSSearch,omitempty"`
	DNSServer *[]string                       `json:"DNSServer,omitempty"`
	HostName  *string                         `json:"HostName,omitempty"`
	IPDetails *ApiprotoOSIPAddressDetailsSpec `json:"IPDetails,omitempty"`
	NTPServer *[]string                       `json:"NTPServer,omitempty"`
	VLAN      *string                         `json:"VLAN,omitempty"`
}

// ApiprotoOSVolumeDetails defines model for apiprotoOSVolumeDetails.
type ApiprotoOSVolumeDetails struct {
	DeviceType          *string `json:"DeviceType,omitempty"`
	OSInstallVolumeFQDD *string `json:"OSInstallVolumeFQDD,omitempty"`
	OSInstallVolumeID   *string `json:"OSInstallVolumeID,omitempty"`
	PickFirstVolume     *string `json:"PickFirstVolume,omitempty"`
	SASAddress          *string `json:"SASAddress,omitempty"`
	SerialNumber        *string `json:"SerialNumber,omitempty"`
	Target              *string `json:"Target,omitempty"`
}

// ApiprotoObjectMeta defines model for apiprotoObjectMeta.
type ApiprotoObjectMeta struct {
	CreationTimestamp *string            `json:"creationTimestamp,omitempty"`
	Generation        *string            `json:"generation,omitempty"`
	Labels            *map[string]string `json:"labels,omitempty"`
	Name              *string            `json:"name,omitempty"`
	Namespace         *string            `json:"namespace,omitempty"`
	ResourceVersion   *string            `json:"resourceVersion,omitempty"`
	Uid               *string            `json:"uid,omitempty"`
}

// ApiprotoOperatingSystemConfig defines model for apiprotoOperatingSystemConfig.
type ApiprotoOperatingSystemConfig struct {
	AutoConfigureBoss      *bool                          `json:"AutoConfigureBoss,omitempty"`
	BootMenuOption         *string                        `json:"BootMenuOption,omitempty"`
	ConfigData             *string                        `json:"ConfigData,omitempty"`
	ConfigType             *string                        `json:"ConfigType,omitempty"`
	InstallVerifyType      *string                        `json:"InstallVerifyType,omitempty"`
	InstallVolumeID        *string                        `json:"InstallVolumeID,omitempty"`
	InstallVolumeTypeOrder *[]ApiprotoOSInstallVolumeMeta `json:"InstallVolumeTypeOrder,omitempty"`
	MinimumDiskSize        *string                        `json:"MinimumDiskSize,omitempty"`
	NetworkingDetails      *ApiprotoOSNetworkingDetails   `json:"NetworkingDetails,omitempty"`
	OSDrivers              *[]string                      `json:"OSDrivers,omitempty"`
}

// ApiprotoOperation defines model for apiprotoOperation.
type ApiprotoOperation struct {
	AssociatedTask     *string  `json:"AssociatedTask,omitempty"`
	OperationName      *string  `json:"OperationName,omitempty"`
	PercentageComplete *float32 `json:"PercentageComplete,omitempty"`
}

// ApiprotoOs defines model for apiprotoOs.
type ApiprotoOs struct {
	ConfigData  *string `json:"configData,omitempty"`
	ConfigType  *string `json:"configType,omitempty"`
	Gateway     *string `json:"gateway,omitempty"`
	Hostname    *string `json:"hostname,omitempty"`
	IpAddress   *string `json:"ipAddress,omitempty"`
	MacAddress  *string `json:"macAddress,omitempty"`
	Name        *string `json:"name,omitempty"`
	Nameservers *string `json:"nameservers,omitempty"`
	Netmask     *string `json:"netmask,omitempty"`
	Password    *string `json:"password,omitempty"`
	Release     *string `json:"release,omitempty"`
	SshKey      *string `json:"sshKey,omitempty"`
	User        *string `json:"user,omitempty"`
	Vendor      *string `json:"vendor,omitempty"`
	Version     *string `json:"version,omitempty"`
}

// ApiprotoPCIeDeviceSpec defines model for apiprotoPCIeDeviceSpec.
type ApiprotoPCIeDeviceSpec struct {
	Description     *string             `json:"Description,omitempty"`
	DeviceType      *string             `json:"DeviceType,omitempty"`
	FirmwareVersion *string             `json:"FirmwareVersion,omitempty"`
	ID              *string             `json:"ID,omitempty"`
	Manufacturer    *string             `json:"Manufacturer,omitempty"`
	Model           *string             `json:"Model,omitempty"`
	Name            *string             `json:"Name,omitempty"`
	PCIeSlotLanes   *int32              `json:"PCIeSlotLanes,omitempty"`
	PCIeSlotNumber  *int32              `json:"PCIeSlotNumber,omitempty"`
	PartNumber      *string             `json:"PartNumber,omitempty"`
	SKU             *string             `json:"SKU,omitempty"`
	SerialNumber    *string             `json:"SerialNumber,omitempty"`
	Status          *ApiprotoStatusSpec `json:"Status,omitempty"`
}

// ApiprotoPagination defines model for apiprotoPagination.
type ApiprotoPagination struct {
	Limit  *int64 `json:"limit,omitempty"`
	Offset *int64 `json:"offset,omitempty"`
	Total  *int64 `json:"total,omitempty"`
}

// ApiprotoPartLocationSpec defines model for apiprotoPartLocationSpec.
type ApiprotoPartLocationSpec struct {
	LocationOrdinalValue *int32  `json:"LocationOrdinalValue,omitempty"`
	LocationType         *string `json:"LocationType,omitempty"`
	Orientation          *string `json:"Orientation,omitempty"`
	Reference            *string `json:"Reference,omitempty"`
	ServiceLabel         *string `json:"ServiceLabel,omitempty"`
}

// ApiprotoPlacementSpec defines model for apiprotoPlacementSpec.
type ApiprotoPlacementSpec struct {
	AdditionalInfo *string `json:"AdditionalInfo,omitempty"`
	Rack           *string `json:"Rack,omitempty"`
	RackOffset     *int32  `json:"RackOffset,omitempty"`
	RackUnits      *string `json:"RackUnits,omitempty"`
	Row            *string `json:"Row,omitempty"`
}

// ApiprotoPostalAddressSpec defines model for apiprotoPostalAddressSpec.
type ApiprotoPostalAddressSpec struct {
	AdditionalCode         *string `json:"AdditionalCode,omitempty"`
	AdditionalInfo         *string `json:"AdditionalInfo,omitempty"`
	Building               *string `json:"Building,omitempty"`
	City                   *string `json:"City,omitempty"`
	Community              *string `json:"Community,omitempty"`
	Country                *int32  `json:"Country,omitempty"`
	District               *string `json:"District,omitempty"`
	Division               *string `json:"Division,omitempty"`
	Floor                  *string `json:"Floor,omitempty"`
	GPSCoords              *string `json:"GPSCoords,omitempty"`
	HouseNumber            *int32  `json:"HouseNumber,omitempty"`
	HouseNumberSuffix      *string `json:"HouseNumberSuffix,omitempty"`
	Landmark               *string `json:"Landmark,omitempty"`
	LeadingStreetDirection *string `json:"LeadingStreetDirection,omitempty"`
	Location               *string `json:"Location,omitempty"`
	Name                   *string `json:"Name,omitempty"`
	Neighborhood           *string `json:"Neighborhood,omitempty"`
	POBox                  *string `json:"POBox,omitempty"`
	PlaceType              *string `json:"PlaceType,omitempty"`
	PostalCode             *string `json:"PostalCode,omitempty"`
	Road                   *string `json:"Road,omitempty"`
	RoadBranch             *string `json:"RoadBranch,omitempty"`
	RoadPostModifier       *string `json:"RoadPostModifier,omitempty"`
	RoadPreModifier        *string `json:"RoadPreModifier,omitempty"`
	RoadSection            *string `json:"RoadSection,omitempty"`
	RoadSubBranch          *string `json:"RoadSubBranch,omitempty"`
	Room                   *string `json:"Room,omitempty"`
	Seat                   *string `json:"Seat,omitempty"`
	Street                 *string `json:"Street,omitempty"`
	StreetSuffix           *string `json:"StreetSuffix,omitempty"`
	Territory              *string `json:"Territory,omitempty"`
	TrailingStreetSuffix   *string `json:"TrailingStreetSuffix,omitempty"`
	Unit                   *string `json:"Unit,omitempty"`
}

// ApiprotoPowerControl defines model for apiprotoPowerControl.
type ApiprotoPowerControl struct {
	Description         *string                  `json:"Description,omitempty"`
	ID                  *string                  `json:"ID,omitempty"`
	MemberID            *string                  `json:"MemberID,omitempty"`
	Name                *string                  `json:"Name,omitempty"`
	PhysicalContext     *string                  `json:"PhysicalContext,omitempty"`
	PowerAllocatedWatts *float32                 `json:"PowerAllocatedWatts,omitempty"`
	PowerAvailableWatts *float32                 `json:"PowerAvailableWatts,omitempty"`
	PowerCapacityWatts  *float32                 `json:"PowerCapacityWatts,omitempty"`
	PowerConsumedWatts  *float32                 `json:"PowerConsumedWatts,omitempty"`
	PowerLimit          *ApiprotoPowerLimitSpec  `json:"PowerLimit,omitempty"`
	PowerMetrics        *ApiprotoPowerMetricSpec `json:"PowerMetrics,omitempty"`
	PowerRequestedWatts *int32                   `json:"PowerRequestedWatts,omitempty"`
	Status              *ApiprotoStatusSpec      `json:"Status,omitempty"`
}

// ApiprotoPowerLimitSpec defines model for apiprotoPowerLimitSpec.
type ApiprotoPowerLimitSpec struct {
	CorrectionInMs *string  `json:"CorrectionInMs,omitempty"`
	LimitException *string  `json:"LimitException,omitempty"`
	LimitInWatts   *float32 `json:"LimitInWatts,omitempty"`
}

// ApiprotoPowerMetricSpec defines model for apiprotoPowerMetricSpec.
type ApiprotoPowerMetricSpec struct {
	AverageConsumedWatts *float32 `json:"AverageConsumedWatts,omitempty"`
	IntervalInMin        *int32   `json:"IntervalInMin,omitempty"`
	MaxConsumedWatts     *float32 `json:"MaxConsumedWatts,omitempty"`
	MinConsumedWatts     *float32 `json:"MinConsumedWatts,omitempty"`
}

// ApiprotoPowerSpec defines model for apiprotoPowerSpec.
type ApiprotoPowerSpec struct {
	Description        *string                   `json:"Description,omitempty"`
	ID                 *string                   `json:"ID,omitempty"`
	IndicatorLED       *string                   `json:"IndicatorLED,omitempty"`
	Name               *string                   `json:"Name,omitempty"`
	PowerControl       *[]ApiprotoPowerControl   `json:"PowerControl,omitempty"`
	PowerControlCount  *int32                    `json:"PowerControlCount,omitempty"`
	PowerSupplies      *[]ApiprotoPowerSupply    `json:"PowerSupplies,omitempty"`
	PowerSuppliesCount *int32                    `json:"PowerSuppliesCount,omitempty"`
	Redundancy         *[]ApiprotoRedundancySpec `json:"Redundancy,omitempty"`
	RedundancyCount    *int32                    `json:"RedundancyCount,omitempty"`
	Voltages           *[]ApiprotoVoltage        `json:"Voltages,omitempty"`
	VoltagesCount      *int32                    `json:"VoltagesCount,omitempty"`
}

// ApiprotoPowerSupply defines model for apiprotoPowerSupply.
type ApiprotoPowerSupply struct {
	Description          *string                   `json:"Description,omitempty"`
	EfficiencyPercent    *float64                  `json:"EfficiencyPercent,omitempty"`
	FirmwareVersion      *string                   `json:"FirmwareVersion,omitempty"`
	HotPluggable         *bool                     `json:"HotPluggable,omitempty"`
	ID                   *string                   `json:"ID,omitempty"`
	IndicatorLED         *string                   `json:"IndicatorLED,omitempty"`
	InputRanges          *[]ApiprotoInputRange     `json:"InputRanges,omitempty"`
	LastPowerOutputWatts *float32                  `json:"LastPowerOutputWatts,omitempty"`
	LineInputVoltage     *int32                    `json:"LineInputVoltage,omitempty"`
	LineInputVoltageType *string                   `json:"LineInputVoltageType,omitempty"`
	Manufacturer         *string                   `json:"Manufacturer,omitempty"`
	MemberID             *string                   `json:"MemberID,omitempty"`
	Model                *string                   `json:"Model,omitempty"`
	Name                 *string                   `json:"Name,omitempty"`
	PartNumber           *string                   `json:"PartNumber,omitempty"`
	PowerCapacityWatts   *float32                  `json:"PowerCapacityWatts,omitempty"`
	PowerInputWatts      *float32                  `json:"PowerInputWatts,omitempty"`
	PowerOutputWatts     *float32                  `json:"PowerOutputWatts,omitempty"`
	PowerSupplyType      *string                   `json:"PowerSupplyType,omitempty"`
	Redundancy           *[]ApiprotoRedundancySpec `json:"Redundancy,omitempty"`
	RedundancyCount      *int32                    `json:"RedundancyCount,omitempty"`
	SerialNumber         *string                   `json:"SerialNumber,omitempty"`
	SparePartNumber      *string                   `json:"SparePartNumber,omitempty"`
	Status               *ApiprotoStatusSpec       `json:"Status,omitempty"`
}

// ApiprotoProcessorSpec defines model for apiprotoProcessorSpec.
type ApiprotoProcessorSpec struct {
	Description           *string                  `json:"Description,omitempty"`
	FPGA                  *ApiprotoFPGA            `json:"FPGA,omitempty"`
	FirmwareVersion       *string                  `json:"FirmwareVersion,omitempty"`
	ID                    *string                  `json:"ID,omitempty"`
	InstructionSet        *string                  `json:"InstructionSet,omitempty"`
	Manufacturer          *string                  `json:"Manufacturer,omitempty"`
	MaxSpeedMHz           *int32                   `json:"MaxSpeedMHz,omitempty"`
	Model                 *string                  `json:"Model,omitempty"`
	Name                  *string                  `json:"Name,omitempty"`
	PartNumber            *string                  `json:"PartNumber,omitempty"`
	ProcessorArchitecture *string                  `json:"ProcessorArchitecture,omitempty"`
	ProcessorID           *ApiprotoprocessorIDSpec `json:"ProcessorID,omitempty"`
	ProcessorType         *string                  `json:"ProcessorType,omitempty"`
	SerialNumber          *string                  `json:"SerialNumber,omitempty"`
	Socket                *string                  `json:"Socket,omitempty"`
	Status                *ApiprotoStatusSpec      `json:"Status,omitempty"`
	TotalCores            *int32                   `json:"TotalCores,omitempty"`
	TotalThreads          *int32                   `json:"TotalThreads,omitempty"`
}

// ApiprotoRAIDConversion defines model for apiprotoRAIDConversion.
type ApiprotoRAIDConversion struct {
	ConvertTo     *string   `json:"ConvertTo,omitempty"`
	StorageDrives *[]string `json:"StorageDrives,omitempty"`
}

// ApiprotoRAIDConversionResponse defines model for apiprotoRAIDConversionResponse.
type ApiprotoRAIDConversionResponse struct {
	FailedDrives     *[]string `json:"FailedDrives,omitempty"`
	SuccessfulDrives *[]string `json:"SuccessfulDrives,omitempty"`
}

// ApiprotoRAIDOperationFlags defines model for apiprotoRAIDOperationFlags.
type ApiprotoRAIDOperationFlags struct {
	AutoCfgRaidBoss          *bool `json:"AutoCfgRaidBoss,omitempty"`
	AutoConfigureBoss        *bool `json:"AutoConfigureBoss,omitempty"`
	DeleteNonMatchingVolumes *bool `json:"DeleteNonMatchingVolumes,omitempty"`
}

// ApiprotoRAIDSpec defines model for apiprotoRAIDSpec.
type ApiprotoRAIDSpec struct {
	AutoConfigureBoss        *bool                   `json:"AutoConfigureBoss,omitempty"`
	DeleteNonMatchingVolumes *bool                   `json:"DeleteNonMatchingVolumes,omitempty"`
	RAIDConv                 *ApiprotoRAIDConversion `json:"RAIDConv,omitempty"`
	RAIDVolumes              *[]ApiprotoRAIDVolume   `json:"RAIDVolumes,omitempty"`
}

// ApiprotoRAIDVolume defines model for apiprotoRAIDVolume.
type ApiprotoRAIDVolume struct {
	MaxCapacityBytes *string `json:"MaxCapacityBytes,omitempty"`
	MediaType        *string `json:"MediaType,omitempty"`
	MinCapacityBytes *string `json:"MinCapacityBytes,omitempty"`
	NVMeRaidVolume   *bool   `json:"NVMeRaidVolume,omitempty"`
	Name             *string `json:"Name,omitempty"`
	NumberOfDrives   *int32  `json:"NumberOfDrives,omitempty"`
	RAIDType         *string `json:"RAIDType,omitempty"`
	SwRaid           *string `json:"SwRaid,omitempty"`
}

// ApiprotoRedundancySpec defines model for apiprotoRedundancySpec.
type ApiprotoRedundancySpec struct {
	Description        *string             `json:"Description,omitempty"`
	ID                 *string             `json:"ID,omitempty"`
	MaxNumSupported    *int32              `json:"MaxNumSupported,omitempty"`
	MemberID           *string             `json:"MemberID,omitempty"`
	MinNumNeeded       *int32              `json:"MinNumNeeded,omitempty"`
	Mode               *string             `json:"Mode,omitempty"`
	Name               *string             `json:"Name,omitempty"`
	RedundancyEnabled  *bool               `json:"RedundancyEnabled,omitempty"`
	RedundancySet      *[]string           `json:"RedundancySet,omitempty"`
	RedundancySetCount *int32              `json:"RedundancySetCount,omitempty"`
	Status             *ApiprotoStatusSpec `json:"Status,omitempty"`
}

// ApiprotoResource defines model for apiprotoResource.
type ApiprotoResource struct {
	// Capabilities A dictionary containing an capabilities definition of a deployment.
	Capabilities *map[string]interface{} `json:"Capabilities,omitempty"`
	Deployment   *ApiprotoDeploymentDB   `json:"Deployment,omitempty"`

	// Description A textual description of the resource. This field provides additional details or context about what the resource is or how it should be used.
	Description *string             `json:"Description,omitempty"`
	Elements    *[]ApiprotoResource `json:"Elements,omitempty"`

	// Extensions It is raw json blob that can be provided while creating resource. This can be used to pass any custom data for creating a resource like compute,cloud,etc.
	Extensions *map[string]map[string]interface{} `json:"Extensions,omitempty"`

	// GlobalAssetId Identifier or serial number of the resource. Service tag of the compute resource can be provided as the value for GlobalAsset ID.
	GlobalAssetId *string         `json:"GlobalAssetId,omitempty"`
	Groups        *ApiprotoGroups `json:"Groups,omitempty"`

	// Id A unique identifier for the resource. This ID is required to be a non-empty string.
	Id *string `json:"Id,omitempty"`

	// Labels A list of labels associated with the resource. Labels are key-value pairs that can be used for organizing, searching, or filtering resources. For example: While creating a compute resource which can be tagged with controller label we can add label as key with role and vlaue as controller.
	Labels *[]ApiprotoLabel `json:"Labels,omitempty"`

	// Name Name of the resource
	Name              *string                       `json:"Name,omitempty"`
	Res               *ApiprotoBaseResource         `json:"Res,omitempty"`
	ResType           *ApiprotoResourceResourceType `json:"ResType,omitempty"`
	ResourceAttribute *ApiprotoResourceAttribute    `json:"ResourceAttribute,omitempty"`

	// ResourcePoolId The ID of the resource pool to which this resource belongs. A resource pool is a collection of resources that can be managed together.
	ResourcePoolId *string `json:"ResourcePoolId,omitempty"`

	// ResourceProfileID The ID of the resource profile associated with this resource.
	ResourceProfileID *string `json:"ResourceProfileID,omitempty"`

	// ResourceTypeId This is the deployment ID for resource type data model.
	ResourceTypeId *string `json:"ResourceTypeId,omitempty"`

	// SiteId Id of the site to which this resource belongs
	SiteId *string                   `json:"SiteId,omitempty"`
	Status *ApiprotoDeploymentStatus `json:"Status,omitempty"`

	// Tags A list of tags assigned to the resource. Tags are simple string identifiers that can be used for categorization and searchability.
	Tags *[]string `json:"Tags,omitempty"`

	// Workflow The workflow name to be provided while creating the resource. This is optional. By default the value is 'install'
	Workflow *string              `json:"Workflow,omitempty"`
	AState   *ResourceAdminState  `json:"aState,omitempty"`
	AStatus  *ResourceAdminStatus `json:"aStatus,omitempty"`
	AvStatus *ResourceAvStatus    `json:"avStatus,omitempty"`
	CStatus  *ResourceCStatus     `json:"cStatus,omitempty"`
	OpState  *ResourceOpState     `json:"opState,omitempty"`
	PStatus  *ResourcePStatus     `json:"pStatus,omitempty"`
	Public   *ResourcePublic      `json:"public,omitempty"`
	SStatus  *ResourceSStatus     `json:"sStatus,omitempty"`
	UState   *ResourceUsageState  `json:"uState,omitempty"`
	UStatus  *ResourceUStatus     `json:"uStatus,omitempty"`
}

// ApiprotoResourceAttribute defines model for apiprotoResourceAttribute.
type ApiprotoResourceAttribute struct {
	Cloud   *ApiprotoCloud   `json:"cloud,omitempty"`
	Compute *ApiprotoCompute `json:"compute,omitempty"`
}

// ApiprotoResourceDetails defines model for apiprotoResourceDetails.
type ApiprotoResourceDetails struct {
	Collected  *string `json:"Collected,omitempty"`
	Resource   *string `json:"Resource,omitempty"`
	Subscribed *string `json:"Subscribed,omitempty"`
}

// ApiprotoResourceInv defines model for apiprotoResourceInv.
type ApiprotoResourceInv struct {
	Allocated   *bool            `json:"Allocated,omitempty"`
	DeletedAt   *string          `json:"DeletedAt,omitempty"`
	Description *string          `json:"Description,omitempty"`
	Id          *string          `json:"Id,omitempty"`
	IsDeleted   *bool            `json:"IsDeleted,omitempty"`
	Labels      *[]ApiprotoLabel `json:"Labels,omitempty"`
	LocationId  *string          `json:"LocationId,omitempty"`
	Name        *string          `json:"Name,omitempty"`
	RpId        *string          `json:"RpId,omitempty"`
	SiteId      *string          `json:"SiteId,omitempty"`
	State       *string          `json:"State,omitempty"`
	Type        *string          `json:"Type,omitempty"`
}

// ApiprotoResourcePool defines model for apiprotoResourcePool.
type ApiprotoResourcePool struct {
	DefaultRp   *bool                     `json:"DefaultRp,omitempty"`
	Description *string                   `json:"Description,omitempty"`
	Extensions  *map[string]ProtobufAny   `json:"Extensions,omitempty"`
	Id          *string                   `json:"Id,omitempty"`
	Labels      *[]ApiprotoLabel          `json:"Labels,omitempty"`
	Name        *string                   `json:"Name,omitempty"`
	Res         *ApiprotoBaseResource     `json:"Res,omitempty"`
	Resources   *[]ApiprotoResource       `json:"Resources,omitempty"`
	SiteId      *string                   `json:"SiteId,omitempty"`
	Status      *ApiprotoDeploymentStatus `json:"Status,omitempty"`
}

// ApiprotoResourcePoolInventory defines model for apiprotoResourcePoolInventory.
type ApiprotoResourcePoolInventory struct {
	DeletedAt     *string               `json:"DeletedAt,omitempty"`
	Description   *string               `json:"Description,omitempty"`
	Id            *string               `json:"Id,omitempty"`
	IsDefault     *bool                 `json:"IsDefault,omitempty"`
	IsDeleted     *bool                 `json:"IsDeleted,omitempty"`
	Labels        *[]ApiprotoLabel      `json:"Labels,omitempty"`
	Name          *string               `json:"Name,omitempty"`
	ResourceCount *int32                `json:"ResourceCount,omitempty"`
	Resources     *ApiprotoResourcesInv `json:"Resources,omitempty"`
	SiteId        *string               `json:"SiteId,omitempty"`
	State         *string               `json:"State,omitempty"`
}

// ApiprotoResourcePoolResp defines model for apiprotoResourcePoolResp.
type ApiprotoResourcePoolResp struct {
	ResourcePool *ApiprotoResourcePool `json:"ResourcePool,omitempty"`
	Resp         *ApiprotoResponse     `json:"Resp,omitempty"`
}

// ApiprotoResourcePoolsInventory defines model for apiprotoResourcePoolsInventory.
type ApiprotoResourcePoolsInventory struct {
	Rps *[]ApiprotoResourcePoolInventory `json:"rps,omitempty"`
}

// ApiprotoResourcePoolsResp defines model for apiprotoResourcePoolsResp.
type ApiprotoResourcePoolsResp struct {
	Pagination    *ApiprotoPagination     `json:"Pagination,omitempty"`
	ResourcePools *[]ApiprotoResourcePool `json:"ResourcePools,omitempty"`
	Resp          *ApiprotoResponse       `json:"Resp,omitempty"`
}

// ApiprotoResourceResourceType defines model for apiprotoResourceResourceType.
type ApiprotoResourceResourceType string

// ApiprotoResourceSubscriptionResp defines model for apiprotoResourceSubscriptionResp.
type ApiprotoResourceSubscriptionResp struct {
	CollectorId *string                    `json:"CollectorId,omitempty"`
	Description *string                    `json:"Description,omitempty"`
	Id          *string                    `json:"Id,omitempty"`
	Name        *string                    `json:"Name,omitempty"`
	Resources   *[]ApiprotoResourceDetails `json:"Resources,omitempty"`
	SiteId      *string                    `json:"SiteId,omitempty"`
}

// ApiprotoResourceSubscriptionsFilter defines model for apiprotoResourceSubscriptionsFilter.
type ApiprotoResourceSubscriptionsFilter struct {
	CollectorId *string `json:"CollectorId,omitempty"`
	SiteId      *string `json:"SiteId,omitempty"`
}

// ApiprotoResourcesInv defines model for apiprotoResourcesInv.
type ApiprotoResourcesInv struct {
	Resources *[]ApiprotoResourceInv `json:"Resources,omitempty"`
}

// ApiprotoResponse defines model for apiprotoResponse.
type ApiprotoResponse struct {
	DebugMsg *string                 `json:"debugMsg,omitempty"`
	ErrorMsg *string                 `json:"errorMsg,omitempty"`
	Id       *string                 `json:"id,omitempty"`
	Jobid    *string                 `json:"jobid,omitempty"`
	Status   *ApiprotoResponseStatus `json:"status,omitempty"`
}

// ApiprotoResponseStatus defines model for apiprotoResponseStatus.
type ApiprotoResponseStatus string

// ApiprotoSDCardSpec defines model for apiprotoSDCardSpec.
type ApiprotoSDCardSpec struct {
	ConnectorLayout *string `json:"ConnectorLayout,omitempty"`
	DeviceFQDD      *string `json:"DeviceFQDD,omitempty"`
	Name            *string `json:"Name,omitempty"`
	Number          *int32  `json:"Number,omitempty"`
}

// ApiprotoSecureBootSpec defines model for apiprotoSecureBootSpec.
type ApiprotoSecureBootSpec = map[string]interface{}

// ApiprotoServer defines model for apiprotoServer.
type ApiprotoServer struct {
	Allocated    *bool                 `json:"Allocated,omitempty"`
	CloudName    *string               `json:"CloudName,omitempty"`
	CloudType    *string               `json:"CloudType,omitempty"`
	CloudVersion *string               `json:"CloudVersion,omitempty"`
	DeletedAt    *string               `json:"DeletedAt,omitempty"`
	DriftStatus  *ApiprotoDriftReports `json:"DriftStatus,omitempty"`
	IsDeleted    *bool                 `json:"IsDeleted,omitempty"`
	Labels       *[]ApiprotoLabel      `json:"Labels,omitempty"`
	Location     *string               `json:"Location,omitempty"`
	ResourcePool *string               `json:"ResourcePool,omitempty"`
	Site         *string               `json:"Site,omitempty"`
	ApiVersion   *string               `json:"apiVersion,omitempty"`
	Metadata     *ApiprotoObjectMeta   `json:"metadata,omitempty"`
	Spec         *ApiprotoServerSpec   `json:"spec,omitempty"`
	Status       *ApiprotoServerStatus `json:"status,omitempty"`
}

// ApiprotoServerBrief defines model for apiprotoServerBrief.
type ApiprotoServerBrief struct {
	Allocated          *bool                      `json:"Allocated,omitempty"`
	AvailableDIMMs     *string                    `json:"AvailableDIMMs,omitempty"`
	BIOSVersion        *string                    `json:"BIOSVersion,omitempty"`
	BMCFwVersion       *string                    `json:"BMCFwVersion,omitempty"`
	CPUModel           *string                    `json:"CPUModel,omitempty"`
	CloudName          *string                    `json:"CloudName,omitempty"`
	CloudType          *string                    `json:"CloudType,omitempty"`
	CloudVersion       *string                    `json:"CloudVersion,omitempty"`
	Command            *string                    `json:"Command,omitempty"`
	Compliant          *string                    `json:"Compliant,omitempty"`
	DeletedAt          *string                    `json:"DeletedAt,omitempty"`
	DeviceID           *string                    `json:"DeviceID,omitempty"`
	DriftStatus        *ApiprotoDriftReportsBrief `json:"DriftStatus,omitempty"`
	Health             *string                    `json:"Health,omitempty"`
	ID                 *string                    `json:"ID,omitempty"`
	IPAddress          *string                    `json:"IPAddress,omitempty"`
	IsDeleted          *bool                      `json:"IsDeleted,omitempty"`
	Labels             *[]ApiprotoLabel           `json:"Labels,omitempty"`
	Location           *string                    `json:"Location,omitempty"`
	Managed            *string                    `json:"Managed,omitempty"`
	Memory             *string                    `json:"Memory,omitempty"`
	Model              *string                    `json:"Model,omitempty"`
	NICInfo            *[]ApiprotoNicFirmwareInfo `json:"NICInfo,omitempty"`
	Name               *string                    `json:"Name,omitempty"`
	OSHostName         *string                    `json:"OSHostName,omitempty"`
	OSIPAddress        *string                    `json:"OSIPAddress,omitempty"`
	OSName             *string                    `json:"OSName,omitempty"`
	OSVersion          *string                    `json:"OSVersion,omitempty"`
	PSU                *string                    `json:"PSU,omitempty"`
	PartialMatch       *bool                      `json:"PartialMatch,omitempty"`
	PowerState         *string                    `json:"PowerState,omitempty"`
	Processors         *string                    `json:"Processors,omitempty"`
	Profile            *string                    `json:"Profile,omitempty"`
	ResourcePool       *string                    `json:"ResourcePool,omitempty"`
	ResourceProfile    *string                    `json:"ResourceProfile,omitempty"`
	SerialNumber       *string                    `json:"SerialNumber,omitempty"`
	ServiceTag         *string                    `json:"ServiceTag,omitempty"`
	Site               *string                    `json:"Site,omitempty"`
	Status             *string                    `json:"Status,omitempty"`
	Storage            *string                    `json:"Storage,omitempty"`
	SystemManufacturer *string                    `json:"SystemManufacturer,omitempty"`
	Tags               *string                    `json:"Tags,omitempty"`
	Tenant             *string                    `json:"Tenant,omitempty"`
	TotalCores         *string                    `json:"TotalCores,omitempty"`
}

// ApiprotoServerMeta defines model for apiprotoServerMeta.
type ApiprotoServerMeta struct {
	ID   *string            `json:"ID,omitempty"`
	Tags *map[string]string `json:"Tags,omitempty"`
}

// ApiprotoServerSpec defines model for apiprotoServerSpec.
type ApiprotoServerSpec struct {
	Audit                  *ApiprotoAuditSpec             `json:"Audit,omitempty"`
	BMC                    *[]ApiprotoBMCSpec             `json:"BMC,omitempty"`
	BMCEndPoint            *string                        `json:"BMCEndPoint,omitempty"`
	BMCLogForward          *ApiprotoBMCLogForwardSpec     `json:"BMCLogForward,omitempty"`
	Bios                   *ApiprotoBIOSSpec              `json:"Bios,omitempty"`
	Boot                   *ApiprotoBootSpec              `json:"Boot,omitempty"`
	Decommission           *ApiprotoDecommissionSpec      `json:"Decommission,omitempty"`
	FactoryReset           *ApiprotoFactoryResetSpec      `json:"FactoryReset,omitempty"`
	FirmwareNames          *[]string                      `json:"FirmwareNames,omitempty"`
	InstalledOsConfig      *ApiprotoInstalledOsConfigSpec `json:"InstalledOsConfig,omitempty"`
	Location               *ApiprotoLocationSpec          `json:"Location,omitempty"`
	Managed                *bool                          `json:"Managed,omitempty"`
	Metadata               *ApiprotoServerMeta            `json:"Metadata,omitempty"`
	Metric                 *ApiprotoMetricSpec            `json:"Metric,omitempty"`
	NIC                    *[]ApiprotoNicAdapterSpec      `json:"NIC,omitempty"`
	OSConfig               *ApiprotoOperatingSystemConfig `json:"OSConfig,omitempty"`
	OSName                 *string                        `json:"OSName,omitempty"`
	OverwriteInstallation  *bool                          `json:"OverwriteInstallation,omitempty"`
	Password               *string                        `json:"Password,omitempty"`
	PowerState             *string                        `json:"PowerState,omitempty"`
	RAID                   *ApiprotoRAIDSpec              `json:"RAID,omitempty"`
	ReInitialize           *bool                          `json:"ReInitialize,omitempty"`
	ReconcileTelemetry     *bool                          `json:"ReconcileTelemetry,omitempty"`
	TelemetryServiceEnable *string                        `json:"TelemetryServiceEnable,omitempty"`
	TenantOp               *bool                          `json:"TenantOp,omitempty"`
	UserName               *string                        `json:"UserName,omitempty"`
}

// ApiprotoServerStatus defines model for apiprotoServerStatus.
type ApiprotoServerStatus struct {
	AssetTag                         *string                              `json:"AssetTag,omitempty"`
	Audit                            *ApiprotoAuditStatus                 `json:"Audit,omitempty"`
	BMC                              *[]ApiprotoBMCStatus                 `json:"BMC,omitempty"`
	BMCLogForward                    *ApiprotoBMCLogForwardStatus         `json:"BMCLogForward,omitempty"`
	Bios                             *ApiprotoBiosStatus                  `json:"Bios,omitempty"`
	Boot                             *[]ApiprotoBootStatus                `json:"Boot,omitempty"`
	Command                          *string                              `json:"Command,omitempty"`
	CompleteBMC                      *[]ApiprotoCompleteBMCStatus         `json:"CompleteBMC,omitempty"`
	CompleteBios                     *ApiprotoCompleteBiosStatus          `json:"CompleteBios,omitempty"`
	Decommission                     *ApiprotoDecommissionStatus          `json:"Decommission,omitempty"`
	DefaultCredsHash                 *string                              `json:"DefaultCredsHash,omitempty"`
	Errors                           *[]string                            `json:"Errors,omitempty"`
	EthernetInterface                *[]ApiprotoEthernetInterfaceSpec     `json:"EthernetInterface,omitempty"`
	FactoryResetCompletedStatus      *ApiprotoFactoryResetCompletedStatus `json:"FactoryResetCompletedStatus,omitempty"`
	FailureBackOffTimeToRetry        *string                              `json:"FailureBackOffTimeToRetry,omitempty"`
	FailureRetries                   *int32                               `json:"FailureRetries,omitempty"`
	Firmware                         *[]ApiprotoFirmwareSpec              `json:"Firmware,omitempty"`
	FirmwareNames                    *[]string                            `json:"FirmwareNames,omitempty"`
	IPAddress                        *string                              `json:"IPAddress,omitempty"`
	InitializationCompleted          *bool                                `json:"InitializationCompleted,omitempty"`
	InventoryCompleted               *bool                                `json:"InventoryCompleted,omitempty"`
	Location                         *ApiprotoLocationSpec                `json:"Location,omitempty"`
	Manufacturer                     *string                              `json:"Manufacturer,omitempty"`
	MaxDIMMSlots                     *int32                               `json:"MaxDIMMSlots,omitempty"`
	Memory                           *[]ApiprotoMemorySpec                `json:"Memory,omitempty"`
	Metric                           *ApiprotoMetricStatus                `json:"Metric,omitempty"`
	Model                            *string                              `json:"Model,omitempty"`
	NIC                              *[]ApiprotoNetworkAdapterStatus      `json:"NIC,omitempty"`
	NetworkInterface                 *[]ApiprotoNetworkInterfaceSpec      `json:"NetworkInterface,omitempty"`
	NextDefaultPasswordIndex         *int32                               `json:"NextDefaultPasswordIndex,omitempty"`
	NextPoll                         *string                              `json:"NextPoll,omitempty"`
	NonRaidToRaidConversionCompleted *bool                                `json:"NonRaidToRaidConversionCompleted,omitempty"`
	NumOfProcessors                  *int32                               `json:"NumOfProcessors,omitempty"`
	OSDetails                        *ApiprotoOSDetailsStatus             `json:"OSDetails,omitempty"`
	OSInstallVolumeID                *string                              `json:"OSInstallVolumeID,omitempty"`
	OSName                           *string                              `json:"OSName,omitempty"`
	OSVolumeDetails                  *ApiprotoOSVolumeDetails             `json:"OSVolumeDetails,omitempty"`
	OsInventoryCompleted             *bool                                `json:"OsInventoryCompleted,omitempty"`
	PCIeDevice                       *[]ApiprotoPCIeDeviceSpec            `json:"PCIeDevice,omitempty"`
	PartNumber                       *string                              `json:"PartNumber,omitempty"`
	Power                            *[]ApiprotoPowerSpec                 `json:"Power,omitempty"`
	PowerState                       *string                              `json:"PowerState,omitempty"`
	Processors                       *[]ApiprotoProcessorSpec             `json:"Processors,omitempty"`
	RAIDConversionDetails            *ApiprotoRAIDConversionResponse      `json:"RAIDConversionDetails,omitempty"`
	RAIDFlags                        *ApiprotoRAIDOperationFlags          `json:"RAIDFlags,omitempty"`
	RaidConversionCompleted          *bool                                `json:"RaidConversionCompleted,omitempty"`
	SDCard                           *[]ApiprotoSDCardSpec                `json:"SDCard,omitempty"`
	SKU                              *string                              `json:"SKU,omitempty"`
	SecureBoot                       *[]ApiprotoSecureBootSpec            `json:"SecureBoot,omitempty"`
	SerialNumber                     *string                              `json:"SerialNumber,omitempty"`
	SimpleStorage                    *[]ApiprotoSimpleStorageSpec         `json:"SimpleStorage,omitempty"`
	SoftwareRaidVolumeMapping        *[]ApiprotoSoftwareVolumeMapping     `json:"SoftwareRaidVolumeMapping,omitempty"`
	State                            *string                              `json:"State,omitempty"`
	Status                           *ApiprotoStatusSpec                  `json:"Status,omitempty"`
	Storage                          *[]ApiprotoStorageSpec               `json:"Storage,omitempty"`
	TelemetryInventoryCompleted      *bool                                `json:"TelemetryInventoryCompleted,omitempty"`
	TelemetryStatus                  *string                              `json:"TelemetryStatus,omitempty"`
	TotalCores                       *int32                               `json:"TotalCores,omitempty"`
	TotalSystemMemory                *float32                             `json:"TotalSystemMemory,omitempty"`
	TransactionStatus                *ApiprotoTransaction                 `json:"TransactionStatus,omitempty"`
	UUID                             *string                              `json:"UUID,omitempty"`
}

// ApiprotoSimpleStorageSpec defines model for apiprotoSimpleStorageSpec.
type ApiprotoSimpleStorageSpec = map[string]interface{}

// ApiprotoSiteInventory defines model for apiprotoSiteInventory.
type ApiprotoSiteInventory struct {
	Address     *ApiprotoAddress                `json:"Address,omitempty"`
	BmcId       *string                         `json:"BmcId,omitempty"`
	Coordinate  *ApiprotoCoordinate             `json:"Coordinate,omitempty"`
	DefaultRpId *string                         `json:"DefaultRpId,omitempty"`
	DeletedAt   *string                         `json:"DeletedAt,omitempty"`
	Description *string                         `json:"Description,omitempty"`
	Id          *string                         `json:"Id,omitempty"`
	IsDeleted   *bool                           `json:"IsDeleted,omitempty"`
	Labels      *[]ApiprotoLabel                `json:"Labels,omitempty"`
	LocationId  *string                         `json:"LocationId,omitempty"`
	Name        *string                         `json:"Name,omitempty"`
	Rps         *ApiprotoResourcePoolsInventory `json:"Rps,omitempty"`
	State       *string                         `json:"State,omitempty"`
}

// ApiprotoSitesInventory defines model for apiprotoSitesInventory.
type ApiprotoSitesInventory struct {
	Sites *[]ApiprotoSiteInventory `json:"sites,omitempty"`
}

// ApiprotoSoftwareVolumeMapping defines model for apiprotoSoftwareVolumeMapping.
type ApiprotoSoftwareVolumeMapping struct {
	BMCRaidName *string `json:"BMCRaidName,omitempty"`
	Name        *string `json:"Name,omitempty"`
}

// ApiprotoStatus defines model for apiprotoStatus.
type ApiprotoStatus string

// ApiprotoStatusSpec defines model for apiprotoStatusSpec.
type ApiprotoStatusSpec struct {
	Health *string `json:"Health,omitempty"`
	State  *string `json:"State,omitempty"`
}

// ApiprotoStorageController defines model for apiprotoStorageController.
type ApiprotoStorageController struct {
	CacheSummary                 *ApiprotoCacheSummarySpec `json:"CacheSummary,omitempty"`
	FirmwareVersion              *string                   `json:"FirmwareVersion,omitempty"`
	ID                           *string                   `json:"ID,omitempty"`
	Identifiers                  *[]ApiprotoIdentifier     `json:"Identifiers,omitempty"`
	Manufacturer                 *string                   `json:"Manufacturer,omitempty"`
	MemberID                     *string                   `json:"MemberID,omitempty"`
	Model                        *string                   `json:"Model,omitempty"`
	Name                         *string                   `json:"Name,omitempty"`
	SerialNumber                 *string                   `json:"SerialNumber,omitempty"`
	SpeedGbps                    *int32                    `json:"SpeedGbps,omitempty"`
	Status                       *ApiprotoStatusSpec       `json:"Status,omitempty"`
	SupportedControllerProtocols *[]string                 `json:"SupportedControllerProtocols,omitempty"`
	SupportedDeviceProtocols     *[]string                 `json:"SupportedDeviceProtocols,omitempty"`
	SupportedRaidtypes           *[]string                 `json:"SupportedRaidtypes,omitempty"`
}

// ApiprotoStorageSpec defines model for apiprotoStorageSpec.
type ApiprotoStorageSpec struct {
	CurrentControllerMode *string                      `json:"CurrentControllerMode,omitempty"`
	Description           *string                      `json:"Description,omitempty"`
	Drives                *[]ApiprotoDrive             `json:"Drives,omitempty"`
	ID                    *string                      `json:"ID,omitempty"`
	Name                  *string                      `json:"Name,omitempty"`
	SlotCount             *int32                       `json:"SlotCount,omitempty"`
	StorageControllers    *[]ApiprotoStorageController `json:"StorageControllers,omitempty"`
	Volumes               *[]ApiprotoVolume            `json:"Volumes,omitempty"`
}

// ApiprotoSubscribeResourcesResp defines model for apiprotoSubscribeResourcesResp.
type ApiprotoSubscribeResourcesResp struct {
	Resp   *ApiprotoResponse `json:"Resp,omitempty"`
	Tenant *string           `json:"Tenant,omitempty"`
}

// ApiprotoSupportedLinkCapability defines model for apiprotoSupportedLinkCapability.
type ApiprotoSupportedLinkCapability struct {
	AutoSpeedNegotiation  *bool    `json:"AutoSpeedNegotiation,omitempty"`
	CapableLinkSpeedMbps  *[]int32 `json:"CapableLinkSpeedMbps,omitempty"`
	LinkNetworkTechnology *string  `json:"LinkNetworkTechnology,omitempty"`
}

// ApiprotoTransaction defines model for apiprotoTransaction.
type ApiprotoTransaction struct {
	TransactionID       *string `json:"TransactionID,omitempty"`
	TransactionProgress *string `json:"TransactionProgress,omitempty"`
	TransactionState    *string `json:"TransactionState,omitempty"`
}

// ApiprotoUnsubscribeResourcesResp defines model for apiprotoUnsubscribeResourcesResp.
type ApiprotoUnsubscribeResourcesResp struct {
	Resp   *ApiprotoResponse `json:"Resp,omitempty"`
	Tenant *string           `json:"Tenant,omitempty"`
}

// ApiprotoUpdateInvRetentionPolicyResp defines model for apiprotoUpdateInvRetentionPolicyResp.
type ApiprotoUpdateInvRetentionPolicyResp struct {
	Error   *ApiprotoAPIError `json:"Error,omitempty"`
	Message *string           `json:"Message,omitempty"`
	Tenant  *string           `json:"Tenant,omitempty"`
	UUID    *string           `json:"UUID,omitempty"`
}

// ApiprotoUpdateResource defines model for apiprotoUpdateResource.
type ApiprotoUpdateResource struct {
	// Op The operation to be performed on the resource, typically specifying the type of update. Common values might include 'replace', 'add', or 'remove', depending on the desired modification.
	Op *string `json:"Op,omitempty"`

	// Path A string representing the JSON Pointer syntax to specify the exact location within the resource where the update will be applied. This allows the system to precisely identify which field or attribute is being updated.
	Path *string `json:"Path,omitempty"`

	// Value The new value(s) to be applied at the specified path as part of the update operation. This could be a single value or a complex object, depending on the nature of the update.
	Value *[]map[string]interface{} `json:"Value,omitempty"`
}

// ApiprotoUpdateResourceResp defines model for apiprotoUpdateResourceResp.
type ApiprotoUpdateResourceResp struct {
	Resource *ApiprotoResource `json:"Resource,omitempty"`
	Response *ApiprotoResponse `json:"Response,omitempty"`
	Tenant   *string           `json:"Tenant,omitempty"`
}

// ApiprotoVLAN defines model for apiprotoVLAN.
type ApiprotoVLAN struct {
	VLANEnable *bool  `json:"VLANEnable,omitempty"`
	VLANId     *int32 `json:"VLANId,omitempty"`
}

// ApiprotoVirtualMedia defines model for apiprotoVirtualMedia.
type ApiprotoVirtualMedia struct {
	ConnectedVia         *string   `json:"ConnectedVia,omitempty"`
	ID                   *string   `json:"ID,omitempty"`
	Image                *string   `json:"Image,omitempty"`
	ImageName            *string   `json:"ImageName,omitempty"`
	Inserted             *bool     `json:"Inserted,omitempty"`
	MediaTypes           *[]string `json:"MediaTypes,omitempty"`
	Name                 *string   `json:"Name,omitempty"`
	Password             *string   `json:"Password,omitempty"`
	TransferMethod       *string   `json:"TransferMethod,omitempty"`
	TransferProtocolType *string   `json:"TransferProtocolType,omitempty"`
	UserName             *string   `json:"UserName,omitempty"`
	WriteProtected       *string   `json:"WriteProtected,omitempty"`
}

// ApiprotoVoltage defines model for apiprotoVoltage.
type ApiprotoVoltage struct {
	Description               *string             `json:"Description,omitempty"`
	ID                        *string             `json:"ID,omitempty"`
	LowerThresholdCritical    *int32              `json:"LowerThresholdCritical,omitempty"`
	LowerThresholdFatal       *int32              `json:"LowerThresholdFatal,omitempty"`
	LowerThresholdNonCritical *int32              `json:"LowerThresholdNonCritical,omitempty"`
	MaxReadingRange           *int32              `json:"MaxReadingRange,omitempty"`
	MemberID                  *string             `json:"MemberID,omitempty"`
	MinReadingRange           *int32              `json:"MinReadingRange,omitempty"`
	Name                      *string             `json:"Name,omitempty"`
	PhysicalContext           *string             `json:"PhysicalContext,omitempty"`
	ReadingVolts              *int32              `json:"ReadingVolts,omitempty"`
	SensorNumber              *int32              `json:"SensorNumber,omitempty"`
	Status                    *ApiprotoStatusSpec `json:"Status,omitempty"`
	UpperThresholdCritical    *int32              `json:"UpperThresholdCritical,omitempty"`
	UpperThresholdFatal       *int32              `json:"UpperThresholdFatal,omitempty"`
	UpperThresholdNonCritical *int32              `json:"UpperThresholdNonCritical,omitempty"`
}

// ApiprotoVolume defines model for apiprotoVolume.
type ApiprotoVolume struct {
	BMCRaidName        *string               `json:"BMCRaidName,omitempty"`
	BlockSizeBytes     *int32                `json:"BlockSizeBytes,omitempty"`
	CapacityBytes      *string               `json:"CapacityBytes,omitempty"`
	Description        *string               `json:"Description,omitempty"`
	DriveIDs           *[]string             `json:"DriveIDs,omitempty"`
	DrivesCount        *int32                `json:"DrivesCount,omitempty"`
	Encrypted          *bool                 `json:"Encrypted,omitempty"`
	EncryptionTypes    *[]string             `json:"EncryptionTypes,omitempty"`
	ID                 *string               `json:"ID,omitempty"`
	Identifiers        *[]ApiprotoIdentifier `json:"Identifiers,omitempty"`
	Name               *string               `json:"Name,omitempty"`
	Operations         *[]ApiprotoOperation  `json:"Operations,omitempty"`
	OptimumIOSizeBytes *int32                `json:"OptimumIOSizeBytes,omitempty"`
	RAIDType           *string               `json:"RAIDType,omitempty"`
	Status             *ApiprotoStatusSpec   `json:"Status,omitempty"`
	SwRaid             *string               `json:"SwRaid,omitempty"`
	VolumeType         *string               `json:"VolumeType,omitempty"`
}

// ApiprotodriftValues defines model for apiprotodriftValues.
type ApiprotodriftValues struct {
	Actual   *string `json:"Actual,omitempty"`
	Expected *string `json:"Expected,omitempty"`
}

// ApiprotoprocessorIDSpec defines model for apiprotoprocessorIDSpec.
type ApiprotoprocessorIDSpec struct {
	EffectiveFamily         *string `json:"EffectiveFamily,omitempty"`
	EffectiveModel          *string `json:"EffectiveModel,omitempty"`
	IdentificationRegisters *string `json:"IdentificationRegisters,omitempty"`
	MicrocodeInfo           *string `json:"MicrocodeInfo,omitempty"`
	Step                    *string `json:"Step,omitempty"`
	VendorID                *string `json:"VendorID,omitempty"`
}

// GooglerpcStatus defines model for googlerpcStatus.
type GooglerpcStatus struct {
	Code    *int32         `json:"code,omitempty"`
	Details *[]ProtobufAny `json:"details,omitempty"`
	Message *string        `json:"message,omitempty"`
}

// ProtobufAny `Any` contains an arbitrary serialized protocol buffer message along with a
// URL that describes the type of the serialized message.
//
// Protobuf library provides support to pack/unpack Any values in the form
// of utility functions or additional generated methods of the Any type.
//
// Example 1: Pack and unpack a message in C++.
//
//	Foo foo = ...;
//	Any any;
//	any.PackFrom(foo);
//	...
//	if (any.UnpackTo(&foo)) {
//	  ...
//	}
//
// Example 2: Pack and unpack a message in Java.
//
//	   Foo foo = ...;
//	   Any any = Any.pack(foo);
//	   ...
//	   if (any.is(Foo.class)) {
//	     foo = any.unpack(Foo.class);
//	   }
//
//	Example 3: Pack and unpack a message in Python.
//
//	   foo = Foo(...)
//	   any = Any()
//	   any.Pack(foo)
//	   ...
//	   if any.Is(Foo.DESCRIPTOR):
//	     any.Unpack(foo)
//	     ...
//
//	Example 4: Pack and unpack a message in Go
//
//	    foo := &pb.Foo{...}
//	    any, err := anypb.New(foo)
//	    if err != nil {
//	      ...
//	    }
//	    ...
//	    foo := &pb.Foo{}
//	    if err := any.UnmarshalTo(foo); err != nil {
//	      ...
//	    }
//
// The pack methods provided by protobuf library will by default use
// 'type.googleapis.com/full.type.name' as the type URL and the unpack
// methods only use the fully qualified type name after the last '/'
// in the type URL, for example "foo.bar.com/x/y.z" will yield type
// name "y.z".
//
// JSON
// ====
// The JSON representation of an `Any` value uses the regular
// representation of the deserialized, embedded message, with an
// additional field `@type` which contains the type URL. Example:
//
//	package google.profile;
//	message Person {
//	  string first_name = 1;
//	  string last_name = 2;
//	}
//
//	{
//	  "@type": "type.googleapis.com/google.profile.Person",
//	  "firstName": <string>,
//	  "lastName": <string>
//	}
//
// If the embedded message type is well-known and has a custom JSON
// representation, that representation will be embedded adding a field
// `value` which holds the custom JSON in addition to the `@type`
// field. Example (for message [google.protobuf.Duration][]):
//
//	{
//	  "@type": "type.googleapis.com/google.protobuf.Duration",
//	  "value": "1.212s"
//	}
type ProtobufAny struct {
	// Type A URL/resource name that uniquely identifies the type of the serialized
	// protocol buffer message. This string must contain at least
	// one "/" character. The last segment of the URL's path must represent
	// the fully qualified name of the type (as in
	// `path/google.protobuf.Duration`). The name should be in a canonical form
	// (e.g., leading "." is not accepted).
	//
	// In practice, teams usually precompile into the binary all types that they
	// expect it to use in the context of Any. However, for URLs which use the
	// scheme `http`, `https`, or no scheme, one can optionally set up a type
	// server that maps type URLs to message definitions as follows:
	//
	// * If no scheme is provided, `https` is assumed.
	// * An HTTP GET on the URL must yield a [google.protobuf.Type][]
	//   value in binary format, or produce an error.
	// * Applications are allowed to cache lookup results based on the
	//   URL, or have them precompiled into a binary to avoid any
	//   lookup. Therefore, binary compatibility needs to be preserved
	//   on changes to types. (Use versioned type names to manage
	//   breaking changes.)
	//
	// Note: this functionality is not currently available in the official
	// protobuf release, and it is not used for type URLs beginning with
	// type.googleapis.com.
	//
	// Schemes other than `http`, `https` (or the empty scheme) might be
	// used with implementation specific semantics.
	Type *string `json:"@type,omitempty"`
}

// RhprotoCreateResourceGroupReqBody defines model for rhprotoCreateResourceGroupReqBody.
type RhprotoCreateResourceGroupReqBody struct {
	Tenant        *string                            `json:"Tenant,omitempty"`
	ResourceGroup *RhprotoResourceGroupObjectRequest `json:"resourceGroup,omitempty"`
}

// RhprotoGetSecretsResponseBody defines model for rhprotoGetSecretsResponseBody.
type RhprotoGetSecretsResponseBody struct {
	Secret *RhprotoSecret `json:"secret,omitempty"`
}

// RhprotoGetTokenReqBody defines model for rhprotoGetTokenReqBody.
type RhprotoGetTokenReqBody struct {
	ClientId  *string `json:"client_id,omitempty"`
	GrantType *string `json:"grant_type,omitempty"`
	Password  *string `json:"password,omitempty"`
	Username  *string `json:"username,omitempty"`
}

// RhprotoGetTokenResponseBody defines model for rhprotoGetTokenResponseBody.
type RhprotoGetTokenResponseBody struct {
	AccessToken      *string `json:"access_token,omitempty"`
	ExpiresIn        *int64  `json:"expires_in,omitempty"`
	IdToken          *string `json:"id_token,omitempty"`
	RefreshExpiresIn *int64  `json:"refresh_expires_in,omitempty"`
	RefreshToken     *string `json:"refresh_token,omitempty"`
	Scope            *string `json:"scope,omitempty"`
	SessionState     *string `json:"session_state,omitempty"`
	TokenType        *string `json:"token_type,omitempty"`
}

// RhprotoGooglerpcStatus defines model for rhprotoGooglerpcStatus.
type RhprotoGooglerpcStatus struct {
	Code    *int32                  `json:"code,omitempty"`
	Details *map[string]interface{} `json:"details,omitempty"`
	Message *string                 `json:"message,omitempty"`
}

// RhprotoJobStatus defines model for rhprotoJobStatus.
type RhprotoJobStatus struct {
	Brief *RhprotoJobStatusBrief `json:"brief,omitempty"`
}

// RhprotoJobStatusBrief defines model for rhprotoJobStatusBrief.
type RhprotoJobStatusBrief struct {
	FailReason *string `json:"FailReason,omitempty"`
	Id         *string `json:"Id,omitempty"`
	StartTime  *string `json:"StartTime,omitempty"`
	Status     *string `json:"Status,omitempty"`
}

// RhprotoResource defines model for rhprotoResource.
type RhprotoResource struct {
	Capabilities      *map[string]interface{}            `json:"Capabilities,omitempty"`
	Deployment        *string                            `json:"Deployment,omitempty"`
	Description       *string                            `json:"Description,omitempty"`
	Elements          *[]ApiprotoResource                `json:"Elements,omitempty"`
	Extensions        *map[string]map[string]interface{} `json:"Extensions,omitempty"`
	GlobalAssetId     *string                            `json:"GlobalAssetId,omitempty"`
	Groups            *ApiprotoGroups                    `json:"Groups,omitempty"`
	Id                *string                            `json:"Id,omitempty"`
	Labels            *[]ApiprotoLabel                   `json:"Labels,omitempty"`
	Name              *string                            `json:"Name,omitempty"`
	Res               *ApiprotoBaseResource              `json:"Res,omitempty"`
	ResType           *ApiprotoResourceResourceType      `json:"ResType,omitempty"`
	ResourceAttribute *ApiprotoResourceAttribute         `json:"ResourceAttribute,omitempty"`
	ResourcePoolId    *string                            `json:"ResourcePoolId,omitempty"`
	ResourceProfileID *string                            `json:"ResourceProfileID,omitempty"`
	ResourceTypeId    *string                            `json:"ResourceTypeId,omitempty"`
	SiteId            *string                            `json:"SiteId,omitempty"`
	Status            *ApiprotoDeploymentStatus          `json:"Status,omitempty"`
	Tags              *[]string                          `json:"Tags,omitempty"`
	Workflow          *string                            `json:"Workflow,omitempty"`
	AState            *ResourceAdminState                `json:"aState,omitempty"`
	AStatus           *ResourceAdminStatus               `json:"aStatus,omitempty"`
	AvStatus          *ResourceAvStatus                  `json:"avStatus,omitempty"`
	CStatus           *ResourceCStatus                   `json:"cStatus,omitempty"`
	OpState           *ResourceOpState                   `json:"opState,omitempty"`
	PStatus           *ResourcePStatus                   `json:"pStatus,omitempty"`
	Public            *ResourcePublic                    `json:"public,omitempty"`
	SStatus           *ResourceSStatus                   `json:"sStatus,omitempty"`
	UState            *ResourceUsageState                `json:"uState,omitempty"`
	UStatus           *ResourceUStatus                   `json:"uStatus,omitempty"`
}

// RhprotoResourceGroupObjectGetResponseBody defines model for rhprotoResourceGroupObjectGetResponseBody.
type RhprotoResourceGroupObjectGetResponseBody struct {
	Description       *string                                        `json:"description,omitempty"`
	Id                *string                                        `json:"id,omitempty"`
	Name              *string                                        `json:"name,omitempty"`
	ResourceSelectors *map[string]RhprotoResourceSelectorGetResponse `json:"resourceSelectors,omitempty"`
	ResourceTypeId    *string                                        `json:"resourceTypeId,omitempty"`
}

// RhprotoResourceGroupObjectRequest defines model for rhprotoResourceGroupObjectRequest.
type RhprotoResourceGroupObjectRequest struct {
	Description       *string                                    `json:"description,omitempty"`
	Id                *string                                    `json:"id,omitempty"`
	Name              *string                                    `json:"name,omitempty"`
	ResourceSelectors *map[string]RhprotoResourceSelectorRequest `json:"resourceSelectors,omitempty"`
	ResourceTypeId    *string                                    `json:"resourceTypeId,omitempty"`
}

// RhprotoResourceSelectorFilter defines model for rhprotoResourceSelectorFilter.
type RhprotoResourceSelectorFilter struct {
	Exclude *map[string]interface{}               `json:"exclude,omitempty"`
	Include *RhprotoResourceSelectorFilterInclude `json:"include,omitempty"`
}

// RhprotoResourceSelectorFilterInclude defines model for rhprotoResourceSelectorFilterInclude.
type RhprotoResourceSelectorFilterInclude struct {
	Labels *[]RhprotoResourceSelectorFilterIncludeLabel `json:"labels,omitempty"`
}

// RhprotoResourceSelectorFilterIncludeLabel defines model for rhprotoResourceSelectorFilterIncludeLabel.
type RhprotoResourceSelectorFilterIncludeLabel struct {
	Key   *string `json:"Key,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// RhprotoResourceSelectorGetResponse defines model for rhprotoResourceSelectorGetResponse.
type RhprotoResourceSelectorGetResponse struct {
	ResourceProfileId *string `json:"ResourceProfileId,omitempty"`
	Filters           *struct {
		Exclude *map[string]interface{} `json:"exclude,omitempty"`
		Include *struct {
			Labels *[]struct {
				Key   *string `json:"Key,omitempty"`
				Value *string `json:"Value,omitempty"`
			} `json:"labels,omitempty"`
		} `json:"include,omitempty"`
	} `json:"filters,omitempty"`
	NumResources *float32           `json:"numResources,omitempty"`
	Resources    *[]RhprotoResource `json:"resources,omitempty"`
	RpId         *string            `json:"rpId,omitempty"`
}

// RhprotoResourceSelectorRequest defines model for rhprotoResourceSelectorRequest.
type RhprotoResourceSelectorRequest struct {
	ResourceProfileId *string                        `json:"ResourceProfileId,omitempty"`
	Filters           *RhprotoResourceSelectorFilter `json:"filters,omitempty"`
	NumResources      *int                           `json:"numResources,omitempty"`
	RpId              *string                        `json:"rpId,omitempty"`
}

// RhprotoSecret defines model for rhprotoSecret.
type RhprotoSecret struct {
	CreatedAt     *string `json:"CreatedAt,omitempty"`
	CreatedBy     *string `json:"CreatedBy,omitempty"`
	IsHiddenValue *bool   `json:"IsHiddenValue,omitempty"`
	Key           *string `json:"Key,omitempty"`
	Tenant        *string `json:"Tenant,omitempty"`
	UpdatedAt     *string `json:"UpdatedAt,omitempty"`
	Value         *string `json:"Value,omitempty"`
	Visibility    *string `json:"Visibility,omitempty"`
}

// GetResourcePoolsBody defines model for GetResourcePoolsBody.
type GetResourcePoolsBody struct {
	Filters    *[]ApiprotoFilter   `json:"Filters,omitempty"`
	Pagination *ApiprotoPagination `json:"Pagination,omitempty"`
}

// SubscribeResourcesBody defines model for SubscribeResourcesBody.
type SubscribeResourcesBody struct {
	Id        *string   `json:"Id,omitempty"`
	Resources *[]string `json:"Resources,omitempty"`
}

// GetLocationsInventoryParams defines parameters for GetLocationsInventory.
type GetLocationsInventoryParams struct {
	// Id Example: loc3
	Id *string `form:"id,omitempty" json:"id,omitempty"`

	// Historical Example: false
	Historical *bool `form:"historical,omitempty" json:"historical,omitempty"`

	// IsDeleted Example: true
	IsDeleted *bool `form:"isDeleted,omitempty" json:"isDeleted,omitempty"`
}

// GetLocationInventoryParams defines parameters for GetLocationInventory.
type GetLocationInventoryParams struct {
	// Depth Example: 1
	Depth *int32 `form:"depth,omitempty" json:"depth,omitempty"`
}

// GetResourcePoolsInventoryParams defines parameters for GetResourcePoolsInventory.
type GetResourcePoolsInventoryParams struct {
	// Id Example: rp_dp
	Id *string `form:"id,omitempty" json:"id,omitempty"`

	// SiteId Example: gc-site
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// Historical Example: true
	Historical *bool `form:"historical,omitempty" json:"historical,omitempty"`

	// IsDeleted Example: true
	IsDeleted *bool `form:"isDeleted,omitempty" json:"isDeleted,omitempty"`
}

// GetResourcePoolInventoryParams defines parameters for GetResourcePoolInventory.
type GetResourcePoolInventoryParams struct {
	// Depth Example: 1
	Depth *int32 `form:"depth,omitempty" json:"depth,omitempty"`
}

// GetResourcesInventoryParams defines parameters for GetResourcesInventory.
type GetResourcesInventoryParams struct {
	// Id Example: test-resource
	Id *string `form:"id,omitempty" json:"id,omitempty"`

	// RpId Example: rp_dp
	RpId    *string `form:"rpId,omitempty" json:"rpId,omitempty"`
	ResType *string `form:"resType,omitempty" json:"resType,omitempty"`

	// Historical Example: true
	Historical *bool `form:"historical,omitempty" json:"historical,omitempty"`

	// IsDeleted Example: false
	IsDeleted *bool `form:"isDeleted,omitempty" json:"isDeleted,omitempty"`
}

// GetInvRetentionPolicyParams defines parameters for GetInvRetentionPolicy.
type GetInvRetentionPolicyParams struct {
	UUID *string `form:"UUID,omitempty" json:"UUID,omitempty"`
}

// UpdateInvRetentionPolicyJSONBody defines parameters for UpdateInvRetentionPolicy.
type UpdateInvRetentionPolicyJSONBody struct {
	RetentionPeriod *int32 `json:"RetentionPeriod,omitempty"`
}

// GetServersInventoryParams defines parameters for GetServersInventory.
type GetServersInventoryParams struct {
	Filters      *string                             `form:"filters,omitempty" json:"filters,omitempty"`
	PageNumber   *string                             `form:"pageNumber,omitempty" json:"pageNumber,omitempty"`
	PageSize     *string                             `form:"pageSize,omitempty" json:"pageSize,omitempty"`
	Id           *string                             `form:"id,omitempty" json:"id,omitempty"`
	IsDeleted    *bool                               `form:"isDeleted,omitempty" json:"isDeleted,omitempty"`
	Historical   *bool                               `form:"historical,omitempty" json:"historical,omitempty"`
	Brief        *string                             `form:"brief,omitempty" json:"brief,omitempty"`
	BiosVersion  *string                             `form:"biosVersion,omitempty" json:"biosVersion,omitempty"`
	BmcFwVersion *string                             `form:"bmcFwVersion,omitempty" json:"bmcFwVersion,omitempty"`
	OsVersion    *string                             `form:"osVersion,omitempty" json:"osVersion,omitempty"`
	CloudName    *string                             `form:"cloudName,omitempty" json:"cloudName,omitempty"`
	CloudType    *string                             `form:"cloudType,omitempty" json:"cloudType,omitempty"`
	CloudVersion *string                             `form:"cloudVersion,omitempty" json:"cloudVersion,omitempty"`
	NicFwVersion *string                             `form:"nicFwVersion,omitempty" json:"nicFwVersion,omitempty"`
	Location     *string                             `form:"location,omitempty" json:"location,omitempty"`
	Site         *string                             `form:"site,omitempty" json:"site,omitempty"`
	ResourcePool *string                             `form:"resourcePool,omitempty" json:"resourcePool,omitempty"`
	PartialMatch *bool                               `form:"partialMatch,omitempty" json:"partialMatch,omitempty"`
	Allocated    *GetServersInventoryParamsAllocated `form:"allocated,omitempty" json:"allocated,omitempty"`
	DriftStatus  *string                             `form:"driftStatus,omitempty" json:"driftStatus,omitempty"`
	LabelFilter  *string                             `form:"labelFilter,omitempty" json:"labelFilter,omitempty"`
}

// GetServersInventoryParamsAllocated defines parameters for GetServersInventory.
type GetServersInventoryParamsAllocated string

// GetServerInventoryParams defines parameters for GetServerInventory.
type GetServerInventoryParams struct {
	UUID *string `form:"UUID,omitempty" json:"UUID,omitempty"`
}

// GetSitesInventoryParams defines parameters for GetSitesInventory.
type GetSitesInventoryParams struct {
	Id         *string `form:"id,omitempty" json:"id,omitempty"`
	LocationId *string `form:"locationId,omitempty" json:"locationId,omitempty"`
	Historical *bool   `form:"historical,omitempty" json:"historical,omitempty"`
	IsDeleted  *bool   `form:"isDeleted,omitempty" json:"isDeleted,omitempty"`
}

// GetSiteInventoryParams defines parameters for GetSiteInventory.
type GetSiteInventoryParams struct {
	// Depth Example: 0
	Depth *int32 `form:"depth,omitempty" json:"depth,omitempty"`
}

// CreateResourcePoolJSONBody defines parameters for CreateResourcePool.
type CreateResourcePoolJSONBody struct {
	ResourcePool *ApiprotoResourcePool `json:"ResourcePool,omitempty"`
}

// DeleteResourcePoolParams defines parameters for DeleteResourcePool.
type DeleteResourcePoolParams struct {
	// Force Example: true
	Force *bool `form:"Force,omitempty" json:"Force,omitempty"`

	// DeleteLogs Example: true
	DeleteLogs *bool `form:"DeleteLogs,omitempty" json:"DeleteLogs,omitempty"`
}

// UpdateResourceJSONBody defines parameters for UpdateResource.
type UpdateResourceJSONBody struct {
	Resource *[]ApiprotoUpdateResource `json:"Resource,omitempty"`

	// ResourceName Name of the resource to be updated
	ResourceName *string `json:"ResourceName,omitempty"`
}

// CreateResourceJSONBody defines parameters for CreateResource.
type CreateResourceJSONBody struct {
	Resource *ApiprotoResource `json:"Resource,omitempty"`
}

// DeleteResourceParams defines parameters for DeleteResource.
type DeleteResourceParams struct {
	// Force Example: true
	Force *bool `form:"Force,omitempty" json:"Force,omitempty"`

	// DeleteLogs Example: true
	DeleteLogs *bool `form:"DeleteLogs,omitempty" json:"DeleteLogs,omitempty"`
}

// SubscribeResourcesJSONBody defines parameters for SubscribeResources.
type SubscribeResourcesJSONBody struct {
	Id        *string   `json:"Id,omitempty"`
	Resources *[]string `json:"Resources,omitempty"`
}

// UnsubscribeResourcesJSONBody defines parameters for UnsubscribeResources.
type UnsubscribeResourcesJSONBody struct {
	Id        *string   `json:"Id,omitempty"`
	Resources *[]string `json:"Resources,omitempty"`
}

// GetResourcePoolsJSONBody defines parameters for GetResourcePools.
type GetResourcePoolsJSONBody struct {
	Filters    *[]ApiprotoFilter   `json:"Filters,omitempty"`
	Pagination *ApiprotoPagination `json:"Pagination,omitempty"`
}

// GetResourcesJSONBody defines parameters for GetResources.
type GetResourcesJSONBody struct {
	Filters    *[]ApiprotoFilter   `json:"Filters,omitempty"`
	Pagination *ApiprotoPagination `json:"Pagination,omitempty"`
}

// GetResourceSubscriptionsJSONBody defines parameters for GetResourceSubscriptions.
type GetResourceSubscriptionsJSONBody struct {
	Filters    *ApiprotoResourceSubscriptionsFilter `json:"Filters,omitempty"`
	Pagination *ApiprotoPagination                  `json:"Pagination,omitempty"`
}

// GetTokenJSONRequestBody defines body for GetToken for application/json ContentType.
type GetTokenJSONRequestBody = RhprotoGetTokenReqBody

// UpdateInvRetentionPolicyJSONRequestBody defines body for UpdateInvRetentionPolicy for application/json ContentType.
type UpdateInvRetentionPolicyJSONRequestBody UpdateInvRetentionPolicyJSONBody

// CreateResourceGroupJSONRequestBody defines body for CreateResourceGroup for application/json ContentType.
type CreateResourceGroupJSONRequestBody = RhprotoCreateResourceGroupReqBody

// CreateResourcePoolJSONRequestBody defines body for CreateResourcePool for application/json ContentType.
type CreateResourcePoolJSONRequestBody CreateResourcePoolJSONBody

// UpdateResourceJSONRequestBody defines body for UpdateResource for application/json ContentType.
type UpdateResourceJSONRequestBody UpdateResourceJSONBody

// CreateResourceJSONRequestBody defines body for CreateResource for application/json ContentType.
type CreateResourceJSONRequestBody CreateResourceJSONBody

// SubscribeResourcesJSONRequestBody defines body for SubscribeResources for application/json ContentType.
type SubscribeResourcesJSONRequestBody SubscribeResourcesJSONBody

// UnsubscribeResourcesJSONRequestBody defines body for UnsubscribeResources for application/json ContentType.
type UnsubscribeResourcesJSONRequestBody UnsubscribeResourcesJSONBody

// GetResourcePoolsJSONRequestBody defines body for GetResourcePools for application/json ContentType.
type GetResourcePoolsJSONRequestBody GetResourcePoolsJSONBody

// GetResourcesJSONRequestBody defines body for GetResources for application/json ContentType.
type GetResourcesJSONRequestBody GetResourcesJSONBody

// GetResourceSubscriptionsJSONRequestBody defines body for GetResourceSubscriptions for application/json ContentType.
type GetResourceSubscriptionsJSONRequestBody GetResourceSubscriptionsJSONBody

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Get Token
	// (POST /identity/v1/tenant/Fulcrum/token/create)
	GetToken(w http.ResponseWriter, r *http.Request)
	// Retrieve the inventory details associated with the locations
	// (GET /v1/tenants/{Tenant}/inventory/locations)
	GetLocationsInventory(w http.ResponseWriter, r *http.Request, tenant string, params GetLocationsInventoryParams)
	// Retrieve inventory details for the specified location
	// (GET /v1/tenants/{Tenant}/inventory/locations/{Id})
	GetLocationInventory(w http.ResponseWriter, r *http.Request, tenant string, id string, params GetLocationInventoryParams)
	// Retrieve the inventory details associated with resource pools
	// (GET /v1/tenants/{Tenant}/inventory/resourcepools)
	GetResourcePoolsInventory(w http.ResponseWriter, r *http.Request, tenant string, params GetResourcePoolsInventoryParams)
	// Retrieve the inventory details associated with the specified resource pool
	// (GET /v1/tenants/{Tenant}/inventory/resourcepools/{Id})
	GetResourcePoolInventory(w http.ResponseWriter, r *http.Request, tenant string, id string, params GetResourcePoolInventoryParams)
	// Retrieve the inventory details associated with the resources
	// (GET /v1/tenants/{Tenant}/inventory/resources)
	GetResourcesInventory(w http.ResponseWriter, r *http.Request, tenant string, params GetResourcesInventoryParams)
	// Retrieve the inventory details associated with the specified resource
	// (GET /v1/tenants/{Tenant}/inventory/resources/{Id})
	GetResourceInventory(w http.ResponseWriter, r *http.Request, tenant string, id string)
	// Get retention policy
	// (GET /v1/tenants/{Tenant}/inventory/retention-policy)
	GetInvRetentionPolicy(w http.ResponseWriter, r *http.Request, tenant string, params GetInvRetentionPolicyParams)
	// Update retention policy
	// (PATCH /v1/tenants/{Tenant}/inventory/retention-policy)
	UpdateInvRetentionPolicy(w http.ResponseWriter, r *http.Request, tenant string)
	// Retrieve the inventory details associated with the servers
	// (GET /v1/tenants/{Tenant}/inventory/servers)
	GetServersInventory(w http.ResponseWriter, r *http.Request, tenant string, params GetServersInventoryParams)
	// Retrieve the inventory details associated with the specified server
	// (GET /v1/tenants/{Tenant}/inventory/servers/{Id})
	GetServerInventory(w http.ResponseWriter, r *http.Request, tenant string, id string, params GetServerInventoryParams)
	// Retrieve the inventory details associated with sites
	// (GET /v1/tenants/{Tenant}/inventory/sites)
	GetSitesInventory(w http.ResponseWriter, r *http.Request, tenant string, params GetSitesInventoryParams)
	// Retrieve the inventory details associated with a site
	// (GET /v1/tenants/{Tenant}/inventory/sites/{Id})
	GetSiteInventory(w http.ResponseWriter, r *http.Request, tenant string, id string, params GetSiteInventoryParams)
	// Verify Request Status
	// (GET /v1/tenants/{Tenant}/jobs/{jobid})
	VerifyRequestStatus(w http.ResponseWriter, r *http.Request, tenant string, jobid string)
	// Create Resource Group
	// (POST /v1/tenants/{Tenant}/resourcegroups)
	CreateResourceGroup(w http.ResponseWriter, r *http.Request, tenant string)
	// Delete Resource Group
	// (DELETE /v1/tenants/{Tenant}/resourcegroups/{resource-group-id})
	DeleteResourceGroup(w http.ResponseWriter, r *http.Request, tenant string, resourceGroupId string)
	// Get Resource Group
	// (GET /v1/tenants/{Tenant}/resourcegroups/{resource-group-id})
	GetResourceGroup(w http.ResponseWriter, r *http.Request, tenant string, resourceGroupId string)
	// Create a resource pool
	// (POST /v1/tenants/{Tenant}/resourcepools)
	CreateResourcePool(w http.ResponseWriter, r *http.Request, tenant string)
	// Delete a resource pool
	// (DELETE /v1/tenants/{Tenant}/resourcepools/{ResourcePoolId})
	DeleteResourcePool(w http.ResponseWriter, r *http.Request, tenant string, resourcePoolId string, params DeleteResourcePoolParams)
	// Update a resource
	// (PATCH /v1/tenants/{Tenant}/resources)
	UpdateResource(w http.ResponseWriter, r *http.Request, tenant string)
	// Create a resource
	// (POST /v1/tenants/{Tenant}/resources)
	CreateResource(w http.ResponseWriter, r *http.Request, tenant string)
	// Get a resource deployment
	// (GET /v1/tenants/{Tenant}/resources/{Id}/deployments)
	GetResourceDeployments(w http.ResponseWriter, r *http.Request, tenant string, id string)
	// Delete a resource
	// (DELETE /v1/tenants/{Tenant}/resources/{ResourceId})
	DeleteResource(w http.ResponseWriter, r *http.Request, tenant string, resourceId string, params DeleteResourceParams)
	// Subscribe resources for telemetry
	// (PATCH /v1/tenants/{Tenant}/resourcesubscriptions/resources/subscribe)
	SubscribeResources(w http.ResponseWriter, r *http.Request, tenant string)
	// Unsubscribe resources from telemetry
	// (PATCH /v1/tenants/{Tenant}/resourcesubscriptions/resources/unsubscribe)
	UnsubscribeResources(w http.ResponseWriter, r *http.Request, tenant string)
	// Retrieve resource pools
	// (POST /v1/tenants/{Tenant}/search/resourcepools)
	GetResourcePools(w http.ResponseWriter, r *http.Request, tenant string)
	// Retrieve a resource pool
	// (GET /v1/tenants/{Tenant}/search/resourcepools/{Id})
	GetResourcePool(w http.ResponseWriter, r *http.Request, tenant string, id string)
	// Retrieve resources
	// (POST /v1/tenants/{Tenant}/search/resources)
	GetResources(w http.ResponseWriter, r *http.Request, tenant string)
	// Retrieve a resource
	// (GET /v1/tenants/{Tenant}/search/resources/{Id})
	GetResource(w http.ResponseWriter, r *http.Request, tenant string, id string)
	// Get resource subscriptions
	// (POST /v1/tenants/{Tenant}/search/resourcesubscriptions)
	GetResourceSubscriptions(w http.ResponseWriter, r *http.Request, tenant string)
	// Get resource subscription
	// (GET /v1/tenants/{Tenant}/search/resourcesubscriptions/{Id})
	GetResourceSubscription(w http.ResponseWriter, r *http.Request, tenant string, id string)
	// GetSecrets
	// (GET /v1/tenants/{Tenant}/secrets/{secret-key})
	GetSecrets(w http.ResponseWriter, r *http.Request, tenant string, secretKey string)
}

// ServerInterfaceWrapper converts contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler            ServerInterface
	HandlerMiddlewares []MiddlewareFunc
	ErrorHandlerFunc   func(w http.ResponseWriter, r *http.Request, err error)
}

type MiddlewareFunc func(http.Handler) http.Handler

// GetToken operation middleware
func (siw *ServerInterfaceWrapper) GetToken(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetToken(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetLocationsInventory operation middleware
func (siw *ServerInterfaceWrapper) GetLocationsInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetLocationsInventoryParams

	// ------------- Optional query parameter "id" -------------

	err = runtime.BindQueryParameter("form", true, false, "id", r.URL.Query(), &params.Id)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "id", Err: err})
		return
	}

	// ------------- Optional query parameter "historical" -------------

	err = runtime.BindQueryParameter("form", true, false, "historical", r.URL.Query(), &params.Historical)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "historical", Err: err})
		return
	}

	// ------------- Optional query parameter "isDeleted" -------------

	err = runtime.BindQueryParameter("form", true, false, "isDeleted", r.URL.Query(), &params.IsDeleted)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "isDeleted", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetLocationsInventory(w, r, tenant, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetLocationInventory operation middleware
func (siw *ServerInterfaceWrapper) GetLocationInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetLocationInventoryParams

	// ------------- Optional query parameter "depth" -------------

	err = runtime.BindQueryParameter("form", true, false, "depth", r.URL.Query(), &params.Depth)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "depth", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetLocationInventory(w, r, tenant, id, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourcePoolsInventory operation middleware
func (siw *ServerInterfaceWrapper) GetResourcePoolsInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetResourcePoolsInventoryParams

	// ------------- Optional query parameter "id" -------------

	err = runtime.BindQueryParameter("form", true, false, "id", r.URL.Query(), &params.Id)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "id", Err: err})
		return
	}

	// ------------- Optional query parameter "siteId" -------------

	err = runtime.BindQueryParameter("form", true, false, "siteId", r.URL.Query(), &params.SiteId)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "siteId", Err: err})
		return
	}

	// ------------- Optional query parameter "historical" -------------

	err = runtime.BindQueryParameter("form", true, false, "historical", r.URL.Query(), &params.Historical)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "historical", Err: err})
		return
	}

	// ------------- Optional query parameter "isDeleted" -------------

	err = runtime.BindQueryParameter("form", true, false, "isDeleted", r.URL.Query(), &params.IsDeleted)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "isDeleted", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourcePoolsInventory(w, r, tenant, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourcePoolInventory operation middleware
func (siw *ServerInterfaceWrapper) GetResourcePoolInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetResourcePoolInventoryParams

	// ------------- Optional query parameter "depth" -------------

	err = runtime.BindQueryParameter("form", true, false, "depth", r.URL.Query(), &params.Depth)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "depth", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourcePoolInventory(w, r, tenant, id, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourcesInventory operation middleware
func (siw *ServerInterfaceWrapper) GetResourcesInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetResourcesInventoryParams

	// ------------- Optional query parameter "id" -------------

	err = runtime.BindQueryParameter("form", true, false, "id", r.URL.Query(), &params.Id)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "id", Err: err})
		return
	}

	// ------------- Optional query parameter "rpId" -------------

	err = runtime.BindQueryParameter("form", true, false, "rpId", r.URL.Query(), &params.RpId)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "rpId", Err: err})
		return
	}

	// ------------- Optional query parameter "resType" -------------

	err = runtime.BindQueryParameter("form", true, false, "resType", r.URL.Query(), &params.ResType)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "resType", Err: err})
		return
	}

	// ------------- Optional query parameter "historical" -------------

	err = runtime.BindQueryParameter("form", true, false, "historical", r.URL.Query(), &params.Historical)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "historical", Err: err})
		return
	}

	// ------------- Optional query parameter "isDeleted" -------------

	err = runtime.BindQueryParameter("form", true, false, "isDeleted", r.URL.Query(), &params.IsDeleted)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "isDeleted", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourcesInventory(w, r, tenant, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourceInventory operation middleware
func (siw *ServerInterfaceWrapper) GetResourceInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourceInventory(w, r, tenant, id)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetInvRetentionPolicy operation middleware
func (siw *ServerInterfaceWrapper) GetInvRetentionPolicy(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetInvRetentionPolicyParams

	// ------------- Optional query parameter "UUID" -------------

	err = runtime.BindQueryParameter("form", true, false, "UUID", r.URL.Query(), &params.UUID)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "UUID", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetInvRetentionPolicy(w, r, tenant, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// UpdateInvRetentionPolicy operation middleware
func (siw *ServerInterfaceWrapper) UpdateInvRetentionPolicy(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.UpdateInvRetentionPolicy(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetServersInventory operation middleware
func (siw *ServerInterfaceWrapper) GetServersInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetServersInventoryParams

	// ------------- Optional query parameter "filters" -------------

	err = runtime.BindQueryParameter("form", true, false, "filters", r.URL.Query(), &params.Filters)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "filters", Err: err})
		return
	}

	// ------------- Optional query parameter "pageNumber" -------------

	err = runtime.BindQueryParameter("form", true, false, "pageNumber", r.URL.Query(), &params.PageNumber)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "pageNumber", Err: err})
		return
	}

	// ------------- Optional query parameter "pageSize" -------------

	err = runtime.BindQueryParameter("form", true, false, "pageSize", r.URL.Query(), &params.PageSize)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "pageSize", Err: err})
		return
	}

	// ------------- Optional query parameter "id" -------------

	err = runtime.BindQueryParameter("form", true, false, "id", r.URL.Query(), &params.Id)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "id", Err: err})
		return
	}

	// ------------- Optional query parameter "isDeleted" -------------

	err = runtime.BindQueryParameter("form", true, false, "isDeleted", r.URL.Query(), &params.IsDeleted)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "isDeleted", Err: err})
		return
	}

	// ------------- Optional query parameter "historical" -------------

	err = runtime.BindQueryParameter("form", true, false, "historical", r.URL.Query(), &params.Historical)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "historical", Err: err})
		return
	}

	// ------------- Optional query parameter "brief" -------------

	err = runtime.BindQueryParameter("form", true, false, "brief", r.URL.Query(), &params.Brief)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "brief", Err: err})
		return
	}

	// ------------- Optional query parameter "biosVersion" -------------

	err = runtime.BindQueryParameter("form", true, false, "biosVersion", r.URL.Query(), &params.BiosVersion)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "biosVersion", Err: err})
		return
	}

	// ------------- Optional query parameter "bmcFwVersion" -------------

	err = runtime.BindQueryParameter("form", true, false, "bmcFwVersion", r.URL.Query(), &params.BmcFwVersion)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "bmcFwVersion", Err: err})
		return
	}

	// ------------- Optional query parameter "osVersion" -------------

	err = runtime.BindQueryParameter("form", true, false, "osVersion", r.URL.Query(), &params.OsVersion)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "osVersion", Err: err})
		return
	}

	// ------------- Optional query parameter "cloudName" -------------

	err = runtime.BindQueryParameter("form", true, false, "cloudName", r.URL.Query(), &params.CloudName)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "cloudName", Err: err})
		return
	}

	// ------------- Optional query parameter "cloudType" -------------

	err = runtime.BindQueryParameter("form", true, false, "cloudType", r.URL.Query(), &params.CloudType)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "cloudType", Err: err})
		return
	}

	// ------------- Optional query parameter "cloudVersion" -------------

	err = runtime.BindQueryParameter("form", true, false, "cloudVersion", r.URL.Query(), &params.CloudVersion)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "cloudVersion", Err: err})
		return
	}

	// ------------- Optional query parameter "nicFwVersion" -------------

	err = runtime.BindQueryParameter("form", true, false, "nicFwVersion", r.URL.Query(), &params.NicFwVersion)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "nicFwVersion", Err: err})
		return
	}

	// ------------- Optional query parameter "location" -------------

	err = runtime.BindQueryParameter("form", true, false, "location", r.URL.Query(), &params.Location)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "location", Err: err})
		return
	}

	// ------------- Optional query parameter "site" -------------

	err = runtime.BindQueryParameter("form", true, false, "site", r.URL.Query(), &params.Site)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "site", Err: err})
		return
	}

	// ------------- Optional query parameter "resourcePool" -------------

	err = runtime.BindQueryParameter("form", true, false, "resourcePool", r.URL.Query(), &params.ResourcePool)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "resourcePool", Err: err})
		return
	}

	// ------------- Optional query parameter "partialMatch" -------------

	err = runtime.BindQueryParameter("form", true, false, "partialMatch", r.URL.Query(), &params.PartialMatch)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "partialMatch", Err: err})
		return
	}

	// ------------- Optional query parameter "allocated" -------------

	err = runtime.BindQueryParameter("form", true, false, "allocated", r.URL.Query(), &params.Allocated)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "allocated", Err: err})
		return
	}

	// ------------- Optional query parameter "driftStatus" -------------

	err = runtime.BindQueryParameter("form", true, false, "driftStatus", r.URL.Query(), &params.DriftStatus)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "driftStatus", Err: err})
		return
	}

	// ------------- Optional query parameter "labelFilter" -------------

	err = runtime.BindQueryParameter("form", true, false, "labelFilter", r.URL.Query(), &params.LabelFilter)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "labelFilter", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetServersInventory(w, r, tenant, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetServerInventory operation middleware
func (siw *ServerInterfaceWrapper) GetServerInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetServerInventoryParams

	// ------------- Optional query parameter "UUID" -------------

	err = runtime.BindQueryParameter("form", true, false, "UUID", r.URL.Query(), &params.UUID)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "UUID", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetServerInventory(w, r, tenant, id, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetSitesInventory operation middleware
func (siw *ServerInterfaceWrapper) GetSitesInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetSitesInventoryParams

	// ------------- Optional query parameter "id" -------------

	err = runtime.BindQueryParameter("form", true, false, "id", r.URL.Query(), &params.Id)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "id", Err: err})
		return
	}

	// ------------- Optional query parameter "locationId" -------------

	err = runtime.BindQueryParameter("form", true, false, "locationId", r.URL.Query(), &params.LocationId)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "locationId", Err: err})
		return
	}

	// ------------- Optional query parameter "historical" -------------

	err = runtime.BindQueryParameter("form", true, false, "historical", r.URL.Query(), &params.Historical)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "historical", Err: err})
		return
	}

	// ------------- Optional query parameter "isDeleted" -------------

	err = runtime.BindQueryParameter("form", true, false, "isDeleted", r.URL.Query(), &params.IsDeleted)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "isDeleted", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetSitesInventory(w, r, tenant, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetSiteInventory operation middleware
func (siw *ServerInterfaceWrapper) GetSiteInventory(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params GetSiteInventoryParams

	// ------------- Optional query parameter "depth" -------------

	err = runtime.BindQueryParameter("form", true, false, "depth", r.URL.Query(), &params.Depth)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "depth", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetSiteInventory(w, r, tenant, id, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// VerifyRequestStatus operation middleware
func (siw *ServerInterfaceWrapper) VerifyRequestStatus(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "jobid" -------------
	var jobid string

	err = runtime.BindStyledParameterWithOptions("simple", "jobid", mux.Vars(r)["jobid"], &jobid, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "jobid", Err: err})
		return
	}

	ctx := r.Context()

	ctx = context.WithValue(ctx, BearerAuthScopes, []string{})

	r = r.WithContext(ctx)

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.VerifyRequestStatus(w, r, tenant, jobid)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CreateResourceGroup operation middleware
func (siw *ServerInterfaceWrapper) CreateResourceGroup(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	ctx := r.Context()

	ctx = context.WithValue(ctx, BearerAuthScopes, []string{})

	r = r.WithContext(ctx)

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateResourceGroup(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// DeleteResourceGroup operation middleware
func (siw *ServerInterfaceWrapper) DeleteResourceGroup(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "resource-group-id" -------------
	var resourceGroupId string

	err = runtime.BindStyledParameterWithOptions("simple", "resource-group-id", mux.Vars(r)["resource-group-id"], &resourceGroupId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "resource-group-id", Err: err})
		return
	}

	ctx := r.Context()

	ctx = context.WithValue(ctx, BearerAuthScopes, []string{})

	r = r.WithContext(ctx)

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteResourceGroup(w, r, tenant, resourceGroupId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourceGroup operation middleware
func (siw *ServerInterfaceWrapper) GetResourceGroup(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "resource-group-id" -------------
	var resourceGroupId string

	err = runtime.BindStyledParameterWithOptions("simple", "resource-group-id", mux.Vars(r)["resource-group-id"], &resourceGroupId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "resource-group-id", Err: err})
		return
	}

	ctx := r.Context()

	ctx = context.WithValue(ctx, BearerAuthScopes, []string{})

	r = r.WithContext(ctx)

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourceGroup(w, r, tenant, resourceGroupId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CreateResourcePool operation middleware
func (siw *ServerInterfaceWrapper) CreateResourcePool(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateResourcePool(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// DeleteResourcePool operation middleware
func (siw *ServerInterfaceWrapper) DeleteResourcePool(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "ResourcePoolId" -------------
	var resourcePoolId string

	err = runtime.BindStyledParameterWithOptions("simple", "ResourcePoolId", mux.Vars(r)["ResourcePoolId"], &resourcePoolId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "ResourcePoolId", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params DeleteResourcePoolParams

	// ------------- Optional query parameter "Force" -------------

	err = runtime.BindQueryParameter("form", true, false, "Force", r.URL.Query(), &params.Force)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Force", Err: err})
		return
	}

	// ------------- Optional query parameter "DeleteLogs" -------------

	err = runtime.BindQueryParameter("form", true, false, "DeleteLogs", r.URL.Query(), &params.DeleteLogs)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "DeleteLogs", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteResourcePool(w, r, tenant, resourcePoolId, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// UpdateResource operation middleware
func (siw *ServerInterfaceWrapper) UpdateResource(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.UpdateResource(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CreateResource operation middleware
func (siw *ServerInterfaceWrapper) CreateResource(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateResource(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourceDeployments operation middleware
func (siw *ServerInterfaceWrapper) GetResourceDeployments(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourceDeployments(w, r, tenant, id)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// DeleteResource operation middleware
func (siw *ServerInterfaceWrapper) DeleteResource(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "ResourceId" -------------
	var resourceId string

	err = runtime.BindStyledParameterWithOptions("simple", "ResourceId", mux.Vars(r)["ResourceId"], &resourceId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "ResourceId", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params DeleteResourceParams

	// ------------- Optional query parameter "Force" -------------

	err = runtime.BindQueryParameter("form", true, false, "Force", r.URL.Query(), &params.Force)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Force", Err: err})
		return
	}

	// ------------- Optional query parameter "DeleteLogs" -------------

	err = runtime.BindQueryParameter("form", true, false, "DeleteLogs", r.URL.Query(), &params.DeleteLogs)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "DeleteLogs", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteResource(w, r, tenant, resourceId, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// SubscribeResources operation middleware
func (siw *ServerInterfaceWrapper) SubscribeResources(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.SubscribeResources(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// UnsubscribeResources operation middleware
func (siw *ServerInterfaceWrapper) UnsubscribeResources(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.UnsubscribeResources(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourcePools operation middleware
func (siw *ServerInterfaceWrapper) GetResourcePools(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourcePools(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourcePool operation middleware
func (siw *ServerInterfaceWrapper) GetResourcePool(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourcePool(w, r, tenant, id)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResources operation middleware
func (siw *ServerInterfaceWrapper) GetResources(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResources(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResource operation middleware
func (siw *ServerInterfaceWrapper) GetResource(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResource(w, r, tenant, id)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourceSubscriptions operation middleware
func (siw *ServerInterfaceWrapper) GetResourceSubscriptions(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourceSubscriptions(w, r, tenant)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetResourceSubscription operation middleware
func (siw *ServerInterfaceWrapper) GetResourceSubscription(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "Id" -------------
	var id string

	err = runtime.BindStyledParameterWithOptions("simple", "Id", mux.Vars(r)["Id"], &id, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Id", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetResourceSubscription(w, r, tenant, id)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// GetSecrets operation middleware
func (siw *ServerInterfaceWrapper) GetSecrets(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "Tenant" -------------
	var tenant string

	err = runtime.BindStyledParameterWithOptions("simple", "Tenant", mux.Vars(r)["Tenant"], &tenant, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "Tenant", Err: err})
		return
	}

	// ------------- Path parameter "secret-key" -------------
	var secretKey string

	err = runtime.BindStyledParameterWithOptions("simple", "secret-key", mux.Vars(r)["secret-key"], &secretKey, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "secret-key", Err: err})
		return
	}

	ctx := r.Context()

	ctx = context.WithValue(ctx, BearerAuthScopes, []string{})

	r = r.WithContext(ctx)

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetSecrets(w, r, tenant, secretKey)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

type UnescapedCookieParamError struct {
	ParamName string
	Err       error
}

func (e *UnescapedCookieParamError) Error() string {
	return fmt.Sprintf("error unescaping cookie parameter '%s'", e.ParamName)
}

func (e *UnescapedCookieParamError) Unwrap() error {
	return e.Err
}

type UnmarshalingParamError struct {
	ParamName string
	Err       error
}

func (e *UnmarshalingParamError) Error() string {
	return fmt.Sprintf("Error unmarshaling parameter %s as JSON: %s", e.ParamName, e.Err.Error())
}

func (e *UnmarshalingParamError) Unwrap() error {
	return e.Err
}

type RequiredParamError struct {
	ParamName string
}

func (e *RequiredParamError) Error() string {
	return fmt.Sprintf("Query argument %s is required, but not found", e.ParamName)
}

type RequiredHeaderError struct {
	ParamName string
	Err       error
}

func (e *RequiredHeaderError) Error() string {
	return fmt.Sprintf("Header parameter %s is required, but not found", e.ParamName)
}

func (e *RequiredHeaderError) Unwrap() error {
	return e.Err
}

type InvalidParamFormatError struct {
	ParamName string
	Err       error
}

func (e *InvalidParamFormatError) Error() string {
	return fmt.Sprintf("Invalid format for parameter %s: %s", e.ParamName, e.Err.Error())
}

func (e *InvalidParamFormatError) Unwrap() error {
	return e.Err
}

type TooManyValuesForParamError struct {
	ParamName string
	Count     int
}

func (e *TooManyValuesForParamError) Error() string {
	return fmt.Sprintf("Expected one value for %s, got %d", e.ParamName, e.Count)
}

// Handler creates http.Handler with routing matching OpenAPI spec.
func Handler(si ServerInterface) http.Handler {
	return HandlerWithOptions(si, GorillaServerOptions{})
}

type GorillaServerOptions struct {
	BaseURL          string
	BaseRouter       *mux.Router
	Middlewares      []MiddlewareFunc
	ErrorHandlerFunc func(w http.ResponseWriter, r *http.Request, err error)
}

// HandlerFromMux creates http.Handler with routing matching OpenAPI spec based on the provided mux.
func HandlerFromMux(si ServerInterface, r *mux.Router) http.Handler {
	return HandlerWithOptions(si, GorillaServerOptions{
		BaseRouter: r,
	})
}

func HandlerFromMuxWithBaseURL(si ServerInterface, r *mux.Router, baseURL string) http.Handler {
	return HandlerWithOptions(si, GorillaServerOptions{
		BaseURL:    baseURL,
		BaseRouter: r,
	})
}

// HandlerWithOptions creates http.Handler with additional options
func HandlerWithOptions(si ServerInterface, options GorillaServerOptions) http.Handler {
	r := options.BaseRouter

	if r == nil {
		r = mux.NewRouter()
	}
	if options.ErrorHandlerFunc == nil {
		options.ErrorHandlerFunc = func(w http.ResponseWriter, r *http.Request, err error) {
			http.Error(w, err.Error(), http.StatusBadRequest)
		}
	}
	wrapper := ServerInterfaceWrapper{
		Handler:            si,
		HandlerMiddlewares: options.Middlewares,
		ErrorHandlerFunc:   options.ErrorHandlerFunc,
	}

	r.HandleFunc(options.BaseURL+"/identity/v1/tenant/Fulcrum/token/create", wrapper.GetToken).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/locations", wrapper.GetLocationsInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/locations/{Id}", wrapper.GetLocationInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/resourcepools", wrapper.GetResourcePoolsInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/resourcepools/{Id}", wrapper.GetResourcePoolInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/resources", wrapper.GetResourcesInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/resources/{Id}", wrapper.GetResourceInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/retention-policy", wrapper.GetInvRetentionPolicy).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/retention-policy", wrapper.UpdateInvRetentionPolicy).Methods("PATCH")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/servers", wrapper.GetServersInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/servers/{Id}", wrapper.GetServerInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/sites", wrapper.GetSitesInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/inventory/sites/{Id}", wrapper.GetSiteInventory).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/jobs/{jobid}", wrapper.VerifyRequestStatus).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcegroups", wrapper.CreateResourceGroup).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcegroups/{resource-group-id}", wrapper.DeleteResourceGroup).Methods("DELETE")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcegroups/{resource-group-id}", wrapper.GetResourceGroup).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcepools", wrapper.CreateResourcePool).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcepools/{ResourcePoolId}", wrapper.DeleteResourcePool).Methods("DELETE")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resources", wrapper.UpdateResource).Methods("PATCH")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resources", wrapper.CreateResource).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resources/{Id}/deployments", wrapper.GetResourceDeployments).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resources/{ResourceId}", wrapper.DeleteResource).Methods("DELETE")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcesubscriptions/resources/subscribe", wrapper.SubscribeResources).Methods("PATCH")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/resourcesubscriptions/resources/unsubscribe", wrapper.UnsubscribeResources).Methods("PATCH")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/search/resourcepools", wrapper.GetResourcePools).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/search/resourcepools/{Id}", wrapper.GetResourcePool).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/search/resources", wrapper.GetResources).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/search/resources/{Id}", wrapper.GetResource).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/search/resourcesubscriptions", wrapper.GetResourceSubscriptions).Methods("POST")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/search/resourcesubscriptions/{Id}", wrapper.GetResourceSubscription).Methods("GET")

	r.HandleFunc(options.BaseURL+"/v1/tenants/{Tenant}/secrets/{secret-key}", wrapper.GetSecrets).Methods("GET")

	return r
}
